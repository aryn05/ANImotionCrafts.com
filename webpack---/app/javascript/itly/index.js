/**
 * This file is auto-generated by Amplitude.
 * To update run 'ampli pull js'
 *
 * Works with versions ^2.0.8 of @itly/sdk and @itly/plugin's
 * https://www.npmjs.com/search?q=%40itly
 */

/* eslint-disable */

import {
    ItlyBrowser
} from '@itly/sdk';
export {
    Loggers,
    Plugin,
    Validation
}
from '@itly/sdk';
import SchemaValidatorPlugin from '@itly/plugin-schema-validator';
import AmplitudePlugin from '@itly/plugin-amplitude';
import SnowplowPlugin from '@itly/plugin-snowplow';

/**
 * @typedef {Object} AliasOptions
 * @property {Object} [amplitude]
 * @property {Object} [snowplow]
 */

/**
 * @typedef {Object} IdentifyOptions
 * @property {Object} [amplitude]
 * @property {Object} [snowplow]
 */

/**
 * @typedef {Object} GroupOptions
 * @property {Object} [amplitude]
 * @property {Object} [snowplow]
 */

/**
 * @typedef {Object} PageOptions
 * @property {Object} [amplitude]
 * @property {Object} [snowplow]
 */

/**
 * @typedef {Object} TrackOptions
 * @property {Object} [amplitude]
 * @property {Object} [snowplow]
 */

class AdClicked {
    constructor(properties) {
        this.name = 'AdClicked';
        this.id = '8cc009a5-c810-4dbd-9f01-3ffa197bdd5d';
        this.version = '2.0.0';
        this.properties = properties;
        this.plugins = {
            'amplitude': false,
        };
    }
}

class AdImpressionViewed {
    constructor(properties) {
        this.name = 'AdImpressionViewed';
        this.id = '4811b975-6097-42f1-a614-7ca0a42bde00';
        this.version = '2.0.0';
        this.properties = properties;
        this.plugins = {
            'amplitude': false,
        };
    }
}

class AdRequested {
    constructor(properties) {
        this.name = 'AdRequested';
        this.id = 'c37c1cd9-6cce-4256-91df-5bc1a4d450ea';
        this.version = '2.0.0';
        this.properties = properties;
        this.plugins = {
            'amplitude': false,
        };
    }
}

class AdRequestFailed {
    constructor(properties) {
        this.name = 'AdRequestFailed';
        this.id = '8ed09702-11ea-4ee2-b650-fedbf626c6d0';
        this.version = '2.0.0';
        this.properties = properties;
        this.plugins = {
            'amplitude': false,
        };
    }
}

class AdServed {
    constructor(properties) {
        this.name = 'AdServed';
        this.id = '909c1f16-6cab-41d7-87e9-3bef9c89e1ff';
        this.version = '2.0.0';
        this.properties = properties;
        this.plugins = {
            'amplitude': false,
        };
    }
}

class AffiliateLinkClicked {
    constructor(properties) {
        this.name = 'AffiliateLinkClicked';
        this.id = '3981bf44-2940-4cc0-8b4e-fd94c43df68c';
        this.version = '1.0.1';
        this.properties = properties;
    }
}

class ApplicationFlowEntered {
    constructor(properties) {
        this.name = 'ApplicationFlowEntered';
        this.id = '0273e281-100d-46ca-ad2c-a588fdf5b37d';
        this.version = '1.0.0';
        this.properties = properties;
    }
}

class ApplicationFlowStepCompleted {
    constructor(properties) {
        this.name = 'ApplicationFlowStepCompleted';
        this.id = '7531ac97-8dc4-42f2-8027-ad7c57a65ffc';
        this.version = '2.0.0';
        this.properties = properties;
    }
}

class AuthenticationViewed {
    constructor(properties) {
        this.name = 'AuthenticationViewed';
        this.id = 'bfa97885-0e44-4f92-b2ca-5b0f7cc038d9';
        this.version = '6.0.1';
        this.properties = properties;
    }
}

class BoostedShotModalViewed {
    constructor(properties) {
        this.name = 'BoostedShotModalViewed';
        this.id = '38d75872-af02-40df-a308-baf3abb280c7';
        this.version = '6.0.2';
        this.properties = properties;
    }
}

class CallToActionClicked {
    constructor(properties) {
        this.name = 'CallToActionClicked';
        this.id = '04210fd2-1a11-4e15-a574-c17b82425863';
        this.version = '1.0.0';
        this.properties = properties;
    }
}

class CheckoutCompleted {
    constructor(properties) {
        this.name = 'CheckoutCompleted';
        this.id = '4f88271d-2fae-4636-8bc7-610530684628';
        this.version = '5.0.2';
        this.properties = properties;
    }
}

class CheckoutViewed {
    constructor(properties) {
        this.name = 'CheckoutViewed';
        this.id = '879b94d5-3597-439c-b7ab-0f602a7f3d0d';
        this.version = '10.0.2';
        this.properties = properties;
    }
}

class CollectionCreated {
    constructor(properties) {
        this.name = 'CollectionCreated';
        this.id = 'eea729f4-7dd2-40a1-b40e-c94a3e8b1b2b';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class CustomDomainPurchased {
    constructor(properties) {
        this.name = 'CustomDomainPurchased';
        this.id = '85263366-35db-4efb-be11-c1e42ad5ddc9';
        this.version = '1.0.1';
        this.properties = properties;
    }
}

class DesignerApplicationSubmitted {
    constructor(properties) {
        this.name = 'DesignerApplicationSubmitted';
        this.id = 'b4c839e6-4774-42bf-9acc-84980d5b46aa';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class DesignerApplicationViewed {
    constructor(properties) {
        this.name = 'DesignerApplicationViewed';
        this.id = 'f8d8d0bb-3149-4067-8a91-5ac4b24223a3';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class DesignerSearched {
    constructor(properties) {
        this.name = 'DesignerSearched';
        this.id = '127c0ace-ef8f-49ea-b8bc-9dcdefb738ce';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class DesignerSearchResultBookmarked {
    constructor(properties) {
        this.name = 'DesignerSearchResultBookmarked';
        this.id = 'c574455a-11e9-41c6-9795-50452949a0b5';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class DesignerSearchResultExpanded {
    constructor(properties) {
        this.name = 'DesignerSearchResultExpanded';
        this.id = '39ab317b-f079-4058-8bff-3100bc978d04';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class DesignerSearchResultUnbookmarked {
    constructor(properties) {
        this.name = 'DesignerSearchResultUnbookmarked';
        this.id = 'ba01b064-8a38-4c7c-8b5c-3f13e6725467';
        this.version = '2.0.2';
        this.properties = properties;
    }
}

class DesignerSearchSaved {
    constructor(properties) {
        this.name = 'DesignerSearchSaved';
        this.id = '53eedf08-a59f-4f3f-83c6-d881cf2e13e1';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class EducationInformationFormCompleted {
    constructor(properties) {
        this.name = 'EducationInformationFormCompleted';
        this.id = '2ab8e71d-280d-47c6-8701-02467074f4b6';
        this.version = '1.0.1';
        this.properties = properties;
    }
}

class FreelanceProjectMessaged {
    constructor(properties) {
        this.name = 'FreelanceProjectMessaged';
        this.id = 'b901e5c3-e53f-4bcb-9a45-a6a7b36ad02b';
        this.version = '3.0.2';
        this.properties = properties;
    }
}

class FreelanceProjectSearched {
    constructor(properties) {
        this.name = 'FreelanceProjectSearched';
        this.id = '7228bdd2-ae4d-4ac3-bcda-165cdecffdea';
        this.version = '3.0.2';
        this.properties = properties;
    }
}

class FreelanceProjectSubmitted {
    constructor(properties) {
        this.name = 'FreelanceProjectSubmitted';
        this.id = '1ce37b64-1f5d-467a-a60e-3e9d1dc7f026';
        this.version = '3.0.2';
        this.properties = properties;
    }
}

class FreelanceProjectViewed {
    constructor(properties) {
        this.name = 'FreelanceProjectViewed';
        this.id = '39ed5ce1-8290-42e1-b914-28ec5b12b95b';
        this.version = '3.0.2';
        this.properties = properties;
    }
}

class GoogleAuthenticationStarted {
    constructor(properties) {
        this.name = 'GoogleAuthenticationStarted';
        this.id = '340219f7-40a6-435b-a893-eeb697dec896';
        this.version = '6.0.1';
        this.properties = properties;
    }
}

class HeaderNavigationClicked {
    constructor(properties) {
        this.name = 'HeaderNavigationClicked';
        this.id = '1dda5bea-8018-423d-b154-b55a69c3ec59';
        this.version = '18.0.0';
        this.properties = properties;
    }
}

class IntroVideoCallToActionClicked {
    constructor(properties) {
        this.name = 'IntroVideoCallToActionClicked';
        this.id = 'b733d1e6-8cb2-4afd-929f-602a3b5c7f74';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class IntroVideoDismissed {
    constructor(properties) {
        this.name = 'IntroVideoDismissed';
        this.id = '0dbcb0bd-f382-4bf7-85a8-183e5ce3002a';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class IntroVideoDisplayed {
    constructor(properties) {
        this.name = 'IntroVideoDisplayed';
        this.id = 'c53938ad-ff30-4041-bf18-295ea9ddcd7a';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class IntroVideoExpanded {
    constructor(properties) {
        this.name = 'IntroVideoExpanded';
        this.id = '5be605eb-cd8c-4ba5-99b0-25bd2d7611c1';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class JobApplied {
    constructor(properties) {
        this.name = 'JobApplied';
        this.id = 'f7211787-ca79-4b86-8550-35b7f3e3f87e';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class JobSearched {
    constructor(properties) {
        this.name = 'JobSearched';
        this.id = '9c0085c4-2e8f-48f7-8bac-89896af461e9';
        this.version = '4.0.3';
        this.properties = properties;
    }
}

class JobViewed {
    constructor(properties) {
        this.name = 'JobViewed';
        this.id = '9769a3c4-1886-4825-b88b-060b286c35eb';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class ModalClicked {
    constructor(properties) {
        this.name = 'ModalClicked';
        this.id = '5a20fd65-7e4b-4c62-9f3e-0b62fc36e4cb';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class ModalDismissed {
    constructor(properties) {
        this.name = 'ModalDismissed';
        this.id = '2951731a-52f7-481f-a3d2-96c5cb5b1cd5';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class ModalShown {
    constructor(properties) {
        this.name = 'ModalShown';
        this.id = '97c270c1-bbc5-4cae-b6a7-681ed8309094';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class OnboardingHiringScopeCompleted {
    constructor(properties) {
        this.name = 'OnboardingHiringScopeCompleted';
        this.id = '625d6a62-a14e-4469-91a8-a1ae084c81a1';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class OnboardingHiringWorkTypeCompleted {
    constructor(properties) {
        this.name = 'OnboardingHiringWorkTypeCompleted';
        this.id = 'ff22f102-eef3-4cca-a02d-7e3005a61be9';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class OnboardingIntentionsCompleted {
    constructor(properties) {
        this.name = 'OnboardingIntentionsCompleted';
        this.id = '34de95a4-dd95-451e-8d23-4ee2a1117345';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class OnboardingProfileCompleted {
    constructor(properties) {
        this.name = 'OnboardingProfileCompleted';
        this.id = '22fdca7a-aedb-4689-87d2-854fd86bdcc3';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class PageViewed {
    constructor(properties) {
        this.name = 'PageViewed';
        this.id = '7caf6760-b44b-4ba8-9d06-35d66780478f';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class PurchaseCallToActionClicked {
    constructor(properties) {
        this.name = 'PurchaseCallToActionClicked';
        this.id = '503fb884-3324-40ea-a7a9-3c9c6445a68f';
        this.version = '11.0.1';
        this.properties = properties;
    }
}

class ShotCommented {
    constructor(properties) {
        this.name = 'ShotCommented';
        this.id = 'c268cb6c-3e23-4e93-98ad-5438538d3c55';
        this.version = '5.0.1';
        this.properties = properties;
    }
}

class ShotFeedFiltered {
    constructor(properties) {
        this.name = 'ShotFeedFiltered';
        this.id = '45d50a49-9bba-4a20-ad76-71ba2b0033e0';
        this.version = '5.0.2';
        this.properties = properties;
    }
}

class ShotLiked {
    constructor(properties) {
        this.name = 'ShotLiked';
        this.id = '2316c0f2-9363-476f-85a0-83d65b427e42';
        this.version = '5.0.1';
        this.properties = properties;
    }
}

class ShotReported {
    constructor(properties) {
        this.name = 'ShotReported';
        this.id = '41cbf5a4-cd8a-4a04-85a9-689d266b005d';
        this.version = '5.0.1';
        this.properties = properties;
    }
}

class ShotSaved {
    constructor(properties) {
        this.name = 'ShotSaved';
        this.id = 'b09ec145-93af-4767-a7a6-203fd42c8708';
        this.version = '5.0.1';
        this.properties = properties;
    }
}

class ShotSearched {
    constructor(properties) {
        this.name = 'ShotSearched';
        this.id = '8a5c4999-8aae-4e49-9982-89db5b6a8409';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class ShotShared {
    constructor(properties) {
        this.name = 'ShotShared';
        this.id = 'bfa4d8cb-fde3-4a3a-b72d-8415c548370b';
        this.version = '5.0.1';
        this.properties = properties;
    }
}

class SignedIn {
    constructor(properties) {
        this.name = 'SignedIn';
        this.id = '8687ee7c-df6a-41e5-bc85-a084e4641f5e';
        this.version = '6.0.2';
        this.properties = properties;
    }
}

class SocialClicked {
    constructor(properties) {
        this.name = 'SocialClicked';
        this.id = 'fd9a8f8e-eafd-48f9-bd0d-704eccf94a36';
        this.version = '2.0.2';
        this.properties = properties;
    }
}

class ToastyClicked {
    constructor(properties) {
        this.name = 'ToastyClicked';
        this.id = '91fbfc31-56c5-4708-aeb4-d3fc407b7512';
        this.version = '2.0.3';
        this.properties = properties;
    }
}

class ToastyDismissed {
    constructor(properties) {
        this.name = 'ToastyDismissed';
        this.id = 'd9377ba5-9ad7-424c-9cc0-13d71c6bd318';
        this.version = '2.0.3';
        this.properties = properties;
    }
}

class ToastyShown {
    constructor(properties) {
        this.name = 'ToastyShown';
        this.id = '024a9524-7729-46c6-beff-cc29deae756e';
        this.version = '2.0.3';
        this.properties = properties;
    }
}

class TwitterAuthenticationStarted {
    constructor(properties) {
        this.name = 'TwitterAuthenticationStarted';
        this.id = 'c7a9b052-c017-4e22-82ab-ab54ddd59ad9';
        this.version = '6.0.1';
        this.properties = properties;
    }
}

class UpgradeCallToActionClicked {
    constructor(properties) {
        this.name = 'UpgradeCallToActionClicked';
        this.id = 'da97423a-71ab-42c0-9a84-01680c62059e';
        this.version = '5.0.2';
        this.properties = properties;
    }
}

class UploadCallToActionClicked {
    constructor(properties) {
        this.name = 'UploadCallToActionClicked';
        this.id = '17c10311-61d0-4e79-81c8-264b55d86fca';
        this.version = '1.0.2';
        this.properties = properties;
    }
}

class UpsellFlowEntered {
    constructor(properties) {
        this.name = 'UpsellFlowEntered';
        this.id = '4096db52-a234-4889-8d1f-7f4be5a2ef07';
        this.version = '10.0.1';
        this.properties = properties;
    }
}

class UpsellFlowStepCompleted {
    constructor(properties) {
        this.name = 'UpsellFlowStepCompleted';
        this.id = 'c75338db-6370-4364-839a-ce084bb6d15b';
        this.version = '10.0.1';
        this.properties = properties;
    }
}

class UserBlocked {
    constructor(properties) {
        this.name = 'UserBlocked';
        this.id = '5f9e5c19-a4f9-417f-ac17-f1129bc5d89c';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class UserFollowed {
    constructor(properties) {
        this.name = 'UserFollowed';
        this.id = '7d5d79be-8057-4d99-9731-a3f72d1fd921';
        this.version = '4.0.2';
        this.properties = properties;
    }
}

class UserMessaged {
    constructor(properties) {
        this.name = 'UserMessaged';
        this.id = '21eadc2b-f048-4ef5-adbf-a997f24026f4';
        this.version = '4.0.3';
        this.properties = properties;
    }
}

class WorkAvailabilityUpdated {
    constructor(properties) {
        this.name = 'WorkAvailabilityUpdated';
        this.id = '3349663e-a866-4245-909a-dfe1f58e4f8e';
        this.version = '5.0.2';
        this.properties = properties;
    }
}

// prettier-ignore
class Itly {
    constructor() {
        this.itly = new ItlyBrowser();
    }

    /**
     * Initialize the Itly SDK. Call once when your application starts.
     * @param {Object} loadOptions Configuration options to initialize the Itly SDK with.
     */
    load(loadOptions) {
        loadOptions = loadOptions || {};
        if (!loadOptions.destinations) {
            throw new Error('A `destinations` object was not provided.');
        }

        const {
            destinations,
            plugins = [],
            ...options
        } = loadOptions;

        if (!destinations.snowplow) {
            throw new Error('Your tracking plan is configured with a Snowplow destination but `destinations.snowplow` was not provided on `loadOptions`.');
        }

        if (!destinations.snowplow.url) {
            throw new Error('Your tracking plan is configured with a Snowplow destination but `destinations.snowplow.url` was not provided on `loadOptions`.');
        }

        const destinationPlugins = destinations.all && destinations.all.disabled ?
            [] :
            [
                new AmplitudePlugin(options.environment === 'production' ?
                    '2cb22d7008b942885ae37c251bec6fb9' :
                    '79ae0a18d3864c7e922d8593846aed2f', {
                        plan: {
                            branch: 'main',
                            source: 'js',
                            version: '158',
                        },
                        ...destinations.amplitude,
                    }
                ),
                new SnowplowPlugin(
                    'ly.iterative.831c4746-45a7-4353-86cf-503ec6c6b7d0',
                    destinations.snowplow,
                ),
            ];

        this.itly.load({
            ...options,
            plugins: [
                new SchemaValidatorPlugin({
                    'identify': {
                        "type": "object",
                        "properties": {
                            "ab_tests": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "uniqueItems": true
                            },
                            "bio": {
                                "type": "string"
                            },
                            "collections_count": {
                                "type": "number"
                            },
                            "comments_count": {
                                "type": "number"
                            },
                            "comments_received_count": {
                                "type": "number"
                            },
                            "country_code": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "dribbble_user_id": {
                                "type": "number"
                            },
                            "email_address": {
                                "type": "string"
                            },
                            "email_validation_risk": {
                                "enum": ["low", "medium", "high", "unknown"]
                            },
                            "first_shot_published_at": {
                                "type": "string"
                            },
                            "followers_count": {
                                "type": "number"
                            },
                            "followings_count": {
                                "type": "number"
                            },
                            "has_advanced_search": {
                                "type": "boolean"
                            },
                            "has_avatar": {
                                "type": "boolean"
                            },
                            "has_disabled_ads": {
                                "type": "boolean"
                            },
                            "has_hiring": {
                                "type": "boolean"
                            },
                            "has_intention_hire": {
                                "type": "boolean"
                            },
                            "has_intention_inspiration": {
                                "type": "boolean"
                            },
                            "has_intention_share": {
                                "type": "boolean"
                            },
                            "has_job": {
                                "type": "boolean"
                            },
                            "has_pro": {
                                "type": "boolean"
                            },
                            "has_pro_business": {
                                "type": "boolean"
                            },
                            "has_pro_trial": {
                                "type": "boolean"
                            },
                            "hiring_has_hire_me_button": {
                                "type": "boolean"
                            },
                            "hiring_hourly_minimum": {
                                "type": "number"
                            },
                            "hiring_hours_minimum": {
                                "type": "number"
                            },
                            "hiring_is_available_for_work": {
                                "type": "boolean"
                            },
                            "hiring_is_freelance": {
                                "type": "boolean"
                            },
                            "hiring_is_fulltime": {
                                "type": "boolean"
                            },
                            "hiring_is_willing_onsite": {
                                "type": "boolean"
                            },
                            "hiring_is_willing_remote": {
                                "type": "boolean"
                            },
                            "hiring_project_mininum": {
                                "type": "number"
                            },
                            "is_suspended": {
                                "type": "boolean"
                            },
                            "is_team_member": {
                                "type": "boolean"
                            },
                            "is_team_owner": {
                                "type": "boolean"
                            },
                            "is_verified": {
                                "type": "boolean"
                            },
                            "last_shot_published_at": {
                                "type": "string"
                            },
                            "likes_count": {
                                "type": "number"
                            },
                            "likes_received_count": {
                                "type": "number"
                            },
                            "location": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "projects_count": {
                                "type": "number"
                            },
                            "shots_count": {
                                "type": "number"
                            },
                            "state_code": {
                                "type": "string"
                            },
                            "user_type": {
                                "enum": ["Spectator", "Prospect", "Player", "Team"]
                            },
                            "username": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["collections_count", "comments_count", "comments_received_count", "created_at", "dribbble_user_id", "email_address", "followers_count", "followings_count", "has_advanced_search", "has_avatar", "has_disabled_ads", "has_hiring", "has_intention_hire", "has_intention_inspiration", "has_intention_share", "has_job", "has_pro", "has_pro_business", "has_pro_trial", "hiring_has_hire_me_button", "hiring_is_available_for_work", "hiring_is_freelance", "hiring_is_fulltime", "hiring_is_willing_onsite", "hiring_is_willing_remote", "is_suspended", "is_team_member", "is_team_owner", "is_verified", "likes_count", "likes_received_count", "name", "projects_count", "shots_count", "user_type", "username"]
                    },
                    'page': {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "string"
                            },
                            "controller": {
                                "type": "string"
                            },
                            "path": {
                                "type": "string"
                            },
                            "referer": {
                                "type": "string"
                            },
                            "search": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["action", "controller", "path", "referer", "search", "title", "url"]
                    },
                    'AdClicked': {
                        "type": "object",
                        "properties": {
                            "ad_id": {
                                "type": "string"
                            },
                            "ad_link": {
                                "type": "string"
                            },
                            "ad_link_type": {
                                "enum": ["Profile", "Shot", "Custom URL"]
                            },
                            "ad_text": {
                                "type": "string"
                            },
                            "cta_text": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "impression_id": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "placement": {
                                "enum": ["Following Feed", "Popular Feed", "Search Feed", "Shot Attachment", "Shot Page", "Shot Modal", "Shot Feed", "Shot Sidebar", "Tag Feed", "Site Footer", "Similar Work", "Popular Feed First"]
                            },
                            "provider": {
                                "enum": ["Dribbble", "Carbon Ads", "BuySellAds"]
                            },
                            "unit_type": {
                                "enum": ["Display", "Boosted Shots"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["ad_id", "ad_link", "ad_link_type", "has_cta", "impression_id", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "placement", "provider", "unit_type"]
                    },
                    'AdImpressionViewed': {
                        "type": "object",
                        "properties": {
                            "ad_id": {
                                "type": "string"
                            },
                            "ad_link": {
                                "type": "string"
                            },
                            "ad_link_type": {
                                "enum": ["Profile", "Shot", "Custom URL"]
                            },
                            "ad_text": {
                                "type": "string"
                            },
                            "cta_text": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "impression_id": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "placement": {
                                "enum": ["Following Feed", "Popular Feed", "Search Feed", "Shot Attachment", "Shot Page", "Shot Modal", "Shot Feed", "Shot Sidebar", "Tag Feed", "Site Footer", "Similar Work", "Popular Feed First"]
                            },
                            "provider": {
                                "enum": ["Dribbble", "Carbon Ads", "BuySellAds"]
                            },
                            "unit_type": {
                                "enum": ["Display", "Boosted Shots"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["ad_id", "ad_link", "ad_link_type", "has_cta", "impression_id", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "placement", "provider", "unit_type"]
                    },
                    'AdRequested': {
                        "type": "object",
                        "properties": {
                            "impression_id": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "placement": {
                                "enum": ["Following Feed", "Popular Feed", "Search Feed", "Shot Attachment", "Shot Page", "Shot Modal", "Shot Feed", "Shot Sidebar", "Tag Feed", "Site Footer", "Similar Work", "Popular Feed First"]
                            },
                            "provider": {
                                "enum": ["Dribbble", "Carbon Ads", "BuySellAds"]
                            },
                            "unit_type": {
                                "enum": ["Display", "Boosted Shots"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["impression_id", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "placement", "provider", "unit_type"]
                    },
                    'AdRequestFailed': {
                        "type": "object",
                        "properties": {
                            "impression_id": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "placement": {
                                "enum": ["Following Feed", "Popular Feed", "Search Feed", "Shot Attachment", "Shot Page", "Shot Modal", "Shot Feed", "Shot Sidebar", "Tag Feed", "Site Footer", "Similar Work", "Popular Feed First"]
                            },
                            "provider": {
                                "enum": ["Dribbble", "Carbon Ads", "BuySellAds"]
                            },
                            "reason": {
                                "type": "string"
                            },
                            "unit_type": {
                                "enum": ["Display", "Boosted Shots"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["impression_id", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "placement", "provider", "reason", "unit_type"]
                    },
                    'AdServed': {
                        "type": "object",
                        "properties": {
                            "ad_id": {
                                "type": "string"
                            },
                            "ad_link": {
                                "type": "string"
                            },
                            "ad_link_type": {
                                "enum": ["Profile", "Shot", "Custom URL"]
                            },
                            "ad_text": {
                                "type": "string"
                            },
                            "cta_text": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "impression_id": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "placement": {
                                "enum": ["Following Feed", "Popular Feed", "Search Feed", "Shot Attachment", "Shot Page", "Shot Modal", "Shot Feed", "Shot Sidebar", "Tag Feed", "Site Footer", "Similar Work", "Popular Feed First"]
                            },
                            "provider": {
                                "enum": ["Dribbble", "Carbon Ads", "BuySellAds"]
                            },
                            "unit_type": {
                                "enum": ["Display", "Boosted Shots"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["ad_id", "ad_link", "ad_link_type", "has_cta", "impression_id", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "placement", "provider", "unit_type"]
                    },
                    'AffiliateLinkClicked': {
                        "type": "object",
                        "properties": {
                            "ad_id": {
                                "type": "string"
                            },
                            "ad_link": {
                                "type": "string"
                            },
                            "ad_text": {
                                "type": "string"
                            },
                            "cta_text": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "owner": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["ad_id", "ad_link", "has_cta", "is_authenticated", "owner", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'ApplicationFlowEntered': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'ApplicationFlowStepCompleted': {
                        "type": "object",
                        "properties": {
                            "application_design_tools": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "application_education": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "application_experience": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "application_location": {
                                "type": "string"
                            },
                            "application_step_name": {
                                "enum": ["intro", "email_address", "name", "phone_number", "location", "job_title", "design_tools", "experience", "education", "cohort", "payment", "final"]
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["application_step_name", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'AuthenticationViewed': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "object_type": {
                                "enum": ["Page", "Modal"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "trigger": {
                                "enum": ["bucket-shot", "create-team", "download-attachment", "follow-user", "google", "homepage-load-more", "like-shot", "list-user", "logged-out-message", "member-profile", "message-user", "more-profile-shots", "new-pro-logged-out", "project-board-index", "share-courtside", "share-overtime", "shot-navigation", "shot-page-feed", "twitter", "unknown", "view-shot", "calendly-meeting"]
                            },
                            "type": {
                                "enum": ["Sign Up", "Sign In"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "object_type", "page_action", "page_controller", "page_path", "page_title", "page_url", "trigger", "type"]
                    },
                    'BoostedShotModalViewed': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "referrer": {
                                "enum": ["Profile", "ShotGrid", "ShotPublished", "ShotShare", "ShotSidebar", "AdminBoost"]
                            },
                            "step_name": {
                                "enum": ["Boost Your Shot", "Budget and Duration", "Payment Details", "Review Your Boost", "Select Your Boost"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "referrer", "step_name"]
                    },
                    'CallToActionClicked': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "location": {
                                "enum": ["Card", "Header", "Lower Pricing Tiers", "Modal", "Sidebar", "Site Nav", "Upper Pricing Tiers", "Widget", "Main Body"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "location", "page_action", "page_controller", "page_path", "page_title", "page_url", "text"]
                    },
                    'CheckoutCompleted': {
                        "type": "object",
                        "properties": {
                            "currency": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "is_trial": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "product_billing_plan": {
                                "enum": ["monthly", "non-recurring", "quarterly", "yearly", "n/a"]
                            },
                            "product_name": {
                                "enum": ["Advanced Search", "Boosted Shot", "External Good", "Hiring", "Job", "Pro", "Pro Business", "Workshop", "Course", "Good", "Project Board Post"]
                            },
                            "product_price": {
                                "type": "number",
                                "minimum": 0
                            },
                            "product_price_paid": {
                                "type": "number",
                                "minimum": 0
                            },
                            "sub_product_name": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["currency", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "product_name", "product_price_paid"]
                    },
                    'CheckoutViewed': {
                        "type": "object",
                        "properties": {
                            "currency": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "is_trial": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "product_billing_plan": {
                                "enum": ["monthly", "non-recurring", "quarterly", "yearly", "n/a"]
                            },
                            "product_name": {
                                "enum": ["Advanced Search", "Boosted Shot", "External Good", "Hiring", "Job", "Pro", "Pro Business", "Workshop", "Course", "Good", "Project Board Post"]
                            },
                            "product_price": {
                                "type": "number",
                                "minimum": 0
                            },
                            "sub_product_name": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["currency", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "product_name"]
                    },
                    'CollectionCreated': {
                        "type": "object",
                        "properties": {
                            "collection_created_at": {
                                "type": "string"
                            },
                            "collection_id": {
                                "type": "string"
                            },
                            "collection_shot_count": {
                                "type": "number",
                                "minimum": 0
                            },
                            "collection_title": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["collection_created_at", "collection_id", "collection_shot_count", "collection_title", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'CustomDomainPurchased': {
                        "type": "object",
                        "properties": {
                            "domain": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["domain"]
                    },
                    'DesignerApplicationSubmitted': {
                        "type": "object",
                        "properties": {
                            "has_complete_profile": {
                                "type": "boolean"
                            },
                            "has_work_preferences": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["has_complete_profile", "has_work_preferences", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'DesignerApplicationViewed': {
                        "type": "object",
                        "properties": {
                            "has_complete_profile": {
                                "type": "boolean"
                            },
                            "has_uploaded_work": {
                                "type": "boolean"
                            },
                            "has_work_preferences": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "location": {
                                "enum": ["Card", "Header", "Lower Pricing Tiers", "Modal", "Sidebar", "Site Nav", "Upper Pricing Tiers", "Widget", "Main Body"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["has_complete_profile", "has_uploaded_work", "has_work_preferences", "is_authenticated", "location", "page_action", "page_controller", "page_path", "page_title", "page_url", "text"]
                    },
                    'DesignerSearched': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "is_saved_search": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "results": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "results_page_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "results_total_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "search_current_role": {
                                "type": "string"
                            },
                            "search_experience_levels": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "search_has_subscription": {
                                "type": "boolean"
                            },
                            "search_job_type": {
                                "enum": ["Agency", "Freelance", "Fulltime"]
                            },
                            "search_location": {
                                "type": "string"
                            },
                            "search_location_country_code": {
                                "type": "string"
                            },
                            "search_location_is_geolocated": {
                                "type": "boolean"
                            },
                            "search_location_latitude": {
                                "type": "integer",
                                "maximum": 90,
                                "minimum": -90
                            },
                            "search_location_longitude": {
                                "type": "integer",
                                "maximum": 180,
                                "minimum": -180
                            },
                            "search_location_state_code": {
                                "type": "string"
                            },
                            "search_onsite_position": {
                                "type": "boolean"
                            },
                            "search_previous_company": {
                                "type": "string"
                            },
                            "search_query": {
                                "type": "string"
                            },
                            "search_remote_position": {
                                "type": "boolean"
                            },
                            "search_salary_range_max": {
                                "type": "integer"
                            },
                            "search_salary_range_min": {
                                "type": "number"
                            },
                            "search_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "is_saved_search", "page_action", "page_controller", "page_path", "page_title", "page_url", "search_has_subscription"]
                    },
                    'DesignerSearchResultBookmarked': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "search_current_role": {
                                "type": "string"
                            },
                            "search_experience_levels": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "search_has_subscription": {
                                "type": "boolean"
                            },
                            "search_job_type": {
                                "enum": ["Agency", "Freelance", "Fulltime"]
                            },
                            "search_location": {
                                "type": "string"
                            },
                            "search_location_country_code": {
                                "type": "string"
                            },
                            "search_location_is_geolocated": {
                                "type": "boolean"
                            },
                            "search_location_latitude": {
                                "type": "integer",
                                "maximum": 90,
                                "minimum": -90
                            },
                            "search_location_longitude": {
                                "type": "integer",
                                "maximum": 180,
                                "minimum": -180
                            },
                            "search_location_state_code": {
                                "type": "string"
                            },
                            "search_onsite_position": {
                                "type": "boolean"
                            },
                            "search_previous_company": {
                                "type": "string"
                            },
                            "search_query": {
                                "type": "string"
                            },
                            "search_remote_position": {
                                "type": "boolean"
                            },
                            "search_salary_range_max": {
                                "type": "integer"
                            },
                            "search_salary_range_min": {
                                "type": "number"
                            },
                            "search_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "user_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "search_has_subscription", "user_id"]
                    },
                    'DesignerSearchResultExpanded': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "search_current_role": {
                                "type": "string"
                            },
                            "search_experience_levels": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "search_has_subscription": {
                                "type": "boolean"
                            },
                            "search_job_type": {
                                "enum": ["Agency", "Freelance", "Fulltime"]
                            },
                            "search_location": {
                                "type": "string"
                            },
                            "search_location_country_code": {
                                "type": "string"
                            },
                            "search_location_is_geolocated": {
                                "type": "boolean"
                            },
                            "search_location_latitude": {
                                "type": "integer",
                                "maximum": 90,
                                "minimum": -90
                            },
                            "search_location_longitude": {
                                "type": "integer",
                                "maximum": 180,
                                "minimum": -180
                            },
                            "search_location_state_code": {
                                "type": "string"
                            },
                            "search_onsite_position": {
                                "type": "boolean"
                            },
                            "search_previous_company": {
                                "type": "string"
                            },
                            "search_query": {
                                "type": "string"
                            },
                            "search_remote_position": {
                                "type": "boolean"
                            },
                            "search_salary_range_max": {
                                "type": "integer"
                            },
                            "search_salary_range_min": {
                                "type": "number"
                            },
                            "search_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "user_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "search_has_subscription", "user_id"]
                    },
                    'DesignerSearchResultUnbookmarked': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "search_current_role": {
                                "type": "string"
                            },
                            "search_experience_levels": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "search_has_subscription": {
                                "type": "boolean"
                            },
                            "search_job_type": {
                                "enum": ["Agency", "Freelance", "Fulltime"]
                            },
                            "search_location": {
                                "type": "string"
                            },
                            "search_location_country_code": {
                                "type": "string"
                            },
                            "search_location_is_geolocated": {
                                "type": "boolean"
                            },
                            "search_location_latitude": {
                                "type": "integer",
                                "maximum": 90,
                                "minimum": -90
                            },
                            "search_location_longitude": {
                                "type": "integer",
                                "maximum": 180,
                                "minimum": -180
                            },
                            "search_location_state_code": {
                                "type": "string"
                            },
                            "search_onsite_position": {
                                "type": "boolean"
                            },
                            "search_previous_company": {
                                "type": "string"
                            },
                            "search_query": {
                                "type": "string"
                            },
                            "search_remote_position": {
                                "type": "boolean"
                            },
                            "search_salary_range_max": {
                                "type": "integer"
                            },
                            "search_salary_range_min": {
                                "type": "number"
                            },
                            "search_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "user_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "search_has_subscription", "user_id"]
                    },
                    'DesignerSearchSaved': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "search_current_role": {
                                "type": "string"
                            },
                            "search_experience_levels": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "search_has_subscription": {
                                "type": "boolean"
                            },
                            "search_job_type": {
                                "enum": ["Agency", "Freelance", "Fulltime"]
                            },
                            "search_location": {
                                "type": "string"
                            },
                            "search_location_country_code": {
                                "type": "string"
                            },
                            "search_location_is_geolocated": {
                                "type": "boolean"
                            },
                            "search_location_latitude": {
                                "type": "integer",
                                "maximum": 90,
                                "minimum": -90
                            },
                            "search_location_longitude": {
                                "type": "integer",
                                "maximum": 180,
                                "minimum": -180
                            },
                            "search_location_state_code": {
                                "type": "string"
                            },
                            "search_onsite_position": {
                                "type": "boolean"
                            },
                            "search_previous_company": {
                                "type": "string"
                            },
                            "search_query": {
                                "type": "string"
                            },
                            "search_remote_position": {
                                "type": "boolean"
                            },
                            "search_salary_range_max": {
                                "type": "integer"
                            },
                            "search_salary_range_min": {
                                "type": "number"
                            },
                            "search_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "search_has_subscription"]
                    },
                    'EducationInformationFormCompleted': {
                        "type": "object",
                        "properties": {
                            "geo_location": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["geo_location", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'FreelanceProjectMessaged': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "message_body": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "project_age_in_days": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "project_budget": {
                                "enum": ["$50 - $1K", "$1K - $10K", "$10K - $20K", "$20K - $50K", "More than $50K"]
                            },
                            "project_description": {
                                "type": "string"
                            },
                            "project_expires_at": {
                                "type": "string"
                            },
                            "project_id": {
                                "type": "string"
                            },
                            "project_owner_id": {
                                "type": "string"
                            },
                            "project_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "project_title": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "message_body", "page_action", "page_controller", "page_path", "page_title", "page_url", "project_age_in_days", "project_budget", "project_description", "project_expires_at", "project_id", "project_owner_id", "project_specialties", "project_title"]
                    },
                    'FreelanceProjectSearched': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "search_budget": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "search_keyword": {
                                "type": "string"
                            },
                            "search_project_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'FreelanceProjectSubmitted': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "project_budget": {
                                "enum": ["$50 - $1K", "$1K - $10K", "$10K - $20K", "$20K - $50K", "More than $50K"]
                            },
                            "project_description": {
                                "type": "string"
                            },
                            "project_owner_id": {
                                "type": "string"
                            },
                            "project_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "project_title": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "project_budget", "project_description", "project_owner_id", "project_specialties", "project_title"]
                    },
                    'FreelanceProjectViewed': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "project_age_in_days": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "project_budget": {
                                "enum": ["$50 - $1K", "$1K - $10K", "$10K - $20K", "$20K - $50K", "More than $50K"]
                            },
                            "project_description": {
                                "type": "string"
                            },
                            "project_expires_at": {
                                "type": "string"
                            },
                            "project_id": {
                                "type": "string"
                            },
                            "project_owner_id": {
                                "type": "string"
                            },
                            "project_specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "project_title": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "project_age_in_days", "project_budget", "project_description", "project_expires_at", "project_id", "project_owner_id", "project_specialties", "project_title"]
                    },
                    'GoogleAuthenticationStarted': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "object_type": {
                                "enum": ["Page", "Modal"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "trigger": {
                                "enum": ["bucket-shot", "create-team", "download-attachment", "follow-user", "google", "homepage-load-more", "like-shot", "list-user", "logged-out-message", "member-profile", "message-user", "more-profile-shots", "new-pro-logged-out", "project-board-index", "share-courtside", "share-overtime", "shot-navigation", "shot-page-feed", "twitter", "unknown", "view-shot", "calendly-meeting"]
                            },
                            "type": {
                                "enum": ["Sign Up", "Sign In"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "object_type", "page_action", "page_controller", "page_path", "page_title", "page_url", "trigger", "type"]
                    },
                    'HeaderNavigationClicked': {
                        "type": "object",
                        "properties": {
                            "category": {
                                "enum": ["Activity", "Find Work", "Hire Designers", "Inspiration", "Profile", "Top Nav", "Work Availability", "Marketplace", "Learn Design", "Go Pro", "Design Files", "Find a designer", "For designers"]
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "item": {
                                "enum": ["3D", "About Dribbble Hiring", "Account Settings", "Activity", "Add-Ons", "Animation", "Blog", "Branding", "Collections", "Creative Market Logo", "Designer Search", "Discover", "Edit Profile", "Edit Work Availability", "Explore Design Work", "Find Work", "Fonts", "Freelance Projects", "Go Pro", "Graphics", "Hire Designers", "Illustration", "Inspiration", "Invite Designers", "Job Board", "Learn", "Learn Design", "List my Job Opening", "Logo", "Marketplace", "Messages", "Mobile", "My Boosted Shots", "My Collections", "My Deals", "My Goods for Sale", "My Jobs", "My Likes", "My Lists", "My Playbook", "My Pro", "My Projects", "My Stats", "My Team", "New & Noteworthy", "Open a Shop", "Pitch", "Playoffs", "Post a Freelance Project", "Print", "Pro Features", "Product Design", "Profile", "Project Board Messages", "Resume Subscription", "Search", "See All Pro Benefits", "See all incoming activity", "Sign Out", "Sign Up", "Sign in", "Templates", "Typography", "Upload", "Upload a Shot", "User", "Web Design", "Web Themes", "Weekly Warm-up", "Work Availability", "Design Leads", "Product Design Course", "For Designers", "For Freelancers", "For Teams", "My Courses", "My Purchases", "Live Workshops", "Browse our courses & workshops", "Share my work", "UI Design Course", "Pro Stats", "View all Activity", "Invite friends", "Work preferences", "Settings"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["category", "is_authenticated", "item", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'IntroVideoCallToActionClicked': {
                        "type": "object",
                        "properties": {
                            "cta_text": {
                                "enum": ["message", "schedule a call"]
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "video_location": {
                                "enum": ["profile", "designer search"]
                            },
                            "video_sub_location": {
                                "enum": ["freelance or agency"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["cta_text", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "video_location"]
                    },
                    'IntroVideoDismissed': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "variant": {
                                "enum": ["large-card", "mini-card"]
                            },
                            "video_location": {
                                "enum": ["profile", "designer search"]
                            },
                            "video_sub_location": {
                                "enum": ["freelance or agency"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "variant", "video_location"]
                    },
                    'IntroVideoDisplayed': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "video_location": {
                                "enum": ["profile", "designer search"]
                            },
                            "video_sub_location": {
                                "enum": ["freelance or agency"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "video_location"]
                    },
                    'IntroVideoExpanded': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "video_location": {
                                "enum": ["profile", "designer search"]
                            },
                            "video_sub_location": {
                                "enum": ["freelance or agency"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "video_location"]
                    },
                    'JobApplied': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "job_apply_link": {
                                "type": "string"
                            },
                            "job_company": {
                                "type": "string"
                            },
                            "job_designer_type": {
                                "type": "string"
                            },
                            "job_has_photo": {
                                "type": "boolean"
                            },
                            "job_id": {
                                "type": "string"
                            },
                            "job_location": {
                                "type": "string"
                            },
                            "job_location_country": {
                                "type": "string"
                            },
                            "job_location_state": {
                                "type": "string"
                            },
                            "job_location_type": {
                                "enum": ["onsite", "remote", "onsite_or_remote"]
                            },
                            "job_role_type": {
                                "type": "string"
                            },
                            "job_social_facebook": {
                                "type": "string"
                            },
                            "job_social_instagram": {
                                "type": "string"
                            },
                            "job_social_twitter": {
                                "type": "string"
                            },
                            "job_social_website": {
                                "type": "string"
                            },
                            "job_title": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "job_apply_link", "job_company", "job_designer_type", "job_has_photo", "job_id", "job_location_type", "job_title", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'JobSearched': {
                        "type": "object",
                        "properties": {
                            "freelance": {
                                "type": "boolean"
                            },
                            "full_time": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "keyword": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "remote_friendly": {
                                "type": "boolean"
                            },
                            "specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": ["freelance", "full_time", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'JobViewed': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "job_apply_link": {
                                "type": "string"
                            },
                            "job_company": {
                                "type": "string"
                            },
                            "job_designer_type": {
                                "type": "string"
                            },
                            "job_has_photo": {
                                "type": "boolean"
                            },
                            "job_id": {
                                "type": "string"
                            },
                            "job_location": {
                                "type": "string"
                            },
                            "job_location_country": {
                                "type": "string"
                            },
                            "job_location_state": {
                                "type": "string"
                            },
                            "job_location_type": {
                                "enum": ["onsite", "remote", "onsite_or_remote"]
                            },
                            "job_role_type": {
                                "type": "string"
                            },
                            "job_social_facebook": {
                                "type": "string"
                            },
                            "job_social_instagram": {
                                "type": "string"
                            },
                            "job_social_twitter": {
                                "type": "string"
                            },
                            "job_social_website": {
                                "type": "string"
                            },
                            "job_title": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "job_apply_link", "job_company", "job_designer_type", "job_has_photo", "job_id", "job_location_type", "job_title", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'ModalClicked': {
                        "type": "object",
                        "properties": {
                            "cta_text": {
                                "type": "string"
                            },
                            "cta_type": {
                                "enum": ["internal link", "external link", "discount"]
                            },
                            "destination_url": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "modal_text": {
                                "type": "string"
                            },
                            "modal_type": {
                                "enum": ["Abandon Checkout"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "target_user_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["cta_type", "has_cta", "is_authenticated", "modal_text", "modal_type", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'ModalDismissed': {
                        "type": "object",
                        "properties": {
                            "cta_text": {
                                "type": "string"
                            },
                            "cta_type": {
                                "enum": ["internal link", "external link", "discount"]
                            },
                            "destination_url": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "modal_text": {
                                "type": "string"
                            },
                            "modal_type": {
                                "enum": ["Abandon Checkout"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "target_user_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["cta_type", "has_cta", "is_authenticated", "modal_text", "modal_type", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'ModalShown': {
                        "type": "object",
                        "properties": {
                            "cta_text": {
                                "type": "string"
                            },
                            "cta_type": {
                                "enum": ["internal link", "external link", "discount"]
                            },
                            "destination_url": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "modal_text": {
                                "type": "string"
                            },
                            "modal_type": {
                                "enum": ["Abandon Checkout"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "target_user_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["cta_type", "has_cta", "is_authenticated", "modal_text", "modal_type", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'OnboardingHiringScopeCompleted': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "scope": {
                                "enum": ["company", "myself"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "scope"]
                    },
                    'OnboardingHiringWorkTypeCompleted': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "work_type": {
                                "enum": ["short-term project", "full-time role"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "work_type"]
                    },
                    'OnboardingIntentionsCompleted': {
                        "type": "object",
                        "properties": {
                            "has_intention_hire": {
                                "type": "boolean"
                            },
                            "has_intention_inspiration": {
                                "type": "boolean"
                            },
                            "has_intention_share": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["has_intention_hire", "has_intention_inspiration", "has_intention_share", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'OnboardingProfileCompleted': {
                        "type": "object",
                        "properties": {
                            "has_avatar": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "location": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["has_avatar", "is_authenticated", "location", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'PageViewed': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'PurchaseCallToActionClicked': {
                        "type": "object",
                        "properties": {
                            "currency": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "location": {
                                "enum": ["Card", "Header", "Lower Pricing Tiers", "Modal", "Sidebar", "Site Nav", "Upper Pricing Tiers", "Widget", "Main Body"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "product_billing_plan": {
                                "enum": ["monthly", "non-recurring", "quarterly", "yearly", "n/a"]
                            },
                            "product_name": {
                                "enum": ["Advanced Search", "Boosted Shot", "External Good", "Hiring", "Job", "Pro", "Pro Business", "Workshop", "Course", "Good", "Project Board Post"]
                            },
                            "product_price": {
                                "type": "number",
                                "minimum": 0
                            },
                            "sub_product_name": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["currency", "is_authenticated", "location", "page_action", "page_controller", "page_path", "page_title", "page_url", "product_name", "text"]
                    },
                    'ShotCommented': {
                        "type": "object",
                        "properties": {
                            "comment": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "shot_attachment_count": {
                                "type": "number"
                            },
                            "shot_comments_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_format": {
                                "enum": ["gif", "image", "video"]
                            },
                            "shot_has_download": {
                                "type": "boolean"
                            },
                            "shot_has_good": {
                                "type": "boolean"
                            },
                            "shot_has_pro_features": {
                                "type": "boolean"
                            },
                            "shot_height": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_id": {
                                "type": "string"
                            },
                            "shot_is_case_study": {
                                "type": "boolean"
                            },
                            "shot_is_multishot": {
                                "type": "boolean"
                            },
                            "shot_is_published_by_team": {
                                "type": "boolean"
                            },
                            "shot_likes_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_published_at": {
                                "type": "string"
                            },
                            "shot_saves_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_title": {
                                "type": "string"
                            },
                            "shot_views_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_width": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["comment", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "shot_attachment_count", "shot_comments_count", "shot_format", "shot_has_download", "shot_has_good", "shot_has_pro_features", "shot_id", "shot_is_case_study", "shot_is_multishot", "shot_is_published_by_team", "shot_likes_count", "shot_published_at", "shot_saves_count", "shot_title", "shot_views_count"]
                    },
                    'ShotFeedFiltered': {
                        "type": "object",
                        "properties": {
                            "category": {
                                "enum": ["All", "Animation", "Apparel", "Apps", "Branding", "Extensions", "Fonts", "Icons", "Illustration", "Logos", "Mobile", "Mockups", "Other", "Patterns", "Print", "Product Design", "Textures", "Typography", "Web Design", "Themes"]
                            },
                            "color": {
                                "type": "string"
                            },
                            "downloads": {
                                "enum": ["Adobe Illustrator", "Adobe Photoshop", "Adobe XD", "Figma", "Invision Studio", "Sketch"]
                            },
                            "feed": {
                                "enum": ["Popular", "Following", "New & Noteworthy", "Goods for Sale"]
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "made_with": {
                                "enum": ["Adobe XD", "Figma", "Sketch", "Unsplash"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'ShotLiked': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "shot_attachment_count": {
                                "type": "number"
                            },
                            "shot_comments_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_format": {
                                "enum": ["gif", "image", "video"]
                            },
                            "shot_has_download": {
                                "type": "boolean"
                            },
                            "shot_has_good": {
                                "type": "boolean"
                            },
                            "shot_has_pro_features": {
                                "type": "boolean"
                            },
                            "shot_height": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_id": {
                                "type": "string"
                            },
                            "shot_is_case_study": {
                                "type": "boolean"
                            },
                            "shot_is_multishot": {
                                "type": "boolean"
                            },
                            "shot_is_published_by_team": {
                                "type": "boolean"
                            },
                            "shot_likes_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_published_at": {
                                "type": "string"
                            },
                            "shot_saves_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_title": {
                                "type": "string"
                            },
                            "shot_views_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_width": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "shot_attachment_count", "shot_comments_count", "shot_format", "shot_has_download", "shot_has_good", "shot_has_pro_features", "shot_id", "shot_is_case_study", "shot_is_multishot", "shot_is_published_by_team", "shot_likes_count", "shot_published_at", "shot_saves_count", "shot_title", "shot_views_count"]
                    },
                    'ShotReported': {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "shot_attachment_count": {
                                "type": "number"
                            },
                            "shot_comments_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_format": {
                                "enum": ["gif", "image", "video"]
                            },
                            "shot_has_download": {
                                "type": "boolean"
                            },
                            "shot_has_good": {
                                "type": "boolean"
                            },
                            "shot_has_pro_features": {
                                "type": "boolean"
                            },
                            "shot_height": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_id": {
                                "type": "string"
                            },
                            "shot_is_case_study": {
                                "type": "boolean"
                            },
                            "shot_is_multishot": {
                                "type": "boolean"
                            },
                            "shot_is_published_by_team": {
                                "type": "boolean"
                            },
                            "shot_likes_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_published_at": {
                                "type": "string"
                            },
                            "shot_saves_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_title": {
                                "type": "string"
                            },
                            "shot_views_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_width": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["description", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "shot_attachment_count", "shot_comments_count", "shot_format", "shot_has_download", "shot_has_good", "shot_has_pro_features", "shot_id", "shot_is_case_study", "shot_is_multishot", "shot_is_published_by_team", "shot_likes_count", "shot_published_at", "shot_saves_count", "shot_title", "shot_views_count"]
                    },
                    'ShotSaved': {
                        "type": "object",
                        "properties": {
                            "collection_created_at": {
                                "type": "string"
                            },
                            "collection_id": {
                                "type": "string"
                            },
                            "collection_shot_count": {
                                "type": "number",
                                "minimum": 0
                            },
                            "collection_title": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "shot_attachment_count": {
                                "type": "number"
                            },
                            "shot_comments_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_format": {
                                "enum": ["gif", "image", "video"]
                            },
                            "shot_has_download": {
                                "type": "boolean"
                            },
                            "shot_has_good": {
                                "type": "boolean"
                            },
                            "shot_has_pro_features": {
                                "type": "boolean"
                            },
                            "shot_height": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_id": {
                                "type": "string"
                            },
                            "shot_is_case_study": {
                                "type": "boolean"
                            },
                            "shot_is_multishot": {
                                "type": "boolean"
                            },
                            "shot_is_published_by_team": {
                                "type": "boolean"
                            },
                            "shot_likes_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_published_at": {
                                "type": "string"
                            },
                            "shot_saves_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_title": {
                                "type": "string"
                            },
                            "shot_views_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_width": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["collection_created_at", "collection_id", "collection_shot_count", "collection_title", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "shot_attachment_count", "shot_comments_count", "shot_format", "shot_has_download", "shot_has_good", "shot_has_pro_features", "shot_id", "shot_is_case_study", "shot_is_multishot", "shot_is_published_by_team", "shot_likes_count", "shot_published_at", "shot_saves_count", "shot_title", "shot_views_count"]
                    },
                    'ShotSearched': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "query": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "query"]
                    },
                    'ShotShared': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "shot_attachment_count": {
                                "type": "number"
                            },
                            "shot_comments_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_format": {
                                "enum": ["gif", "image", "video"]
                            },
                            "shot_has_download": {
                                "type": "boolean"
                            },
                            "shot_has_good": {
                                "type": "boolean"
                            },
                            "shot_has_pro_features": {
                                "type": "boolean"
                            },
                            "shot_height": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_id": {
                                "type": "string"
                            },
                            "shot_is_case_study": {
                                "type": "boolean"
                            },
                            "shot_is_multishot": {
                                "type": "boolean"
                            },
                            "shot_is_published_by_team": {
                                "type": "boolean"
                            },
                            "shot_likes_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_published_at": {
                                "type": "string"
                            },
                            "shot_saves_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_title": {
                                "type": "string"
                            },
                            "shot_views_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "shot_width": {
                                "type": "integer"
                            },
                            "social_platform": {
                                "enum": ["clipboard", "twitter", "pinterest"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "shot_attachment_count", "shot_comments_count", "shot_format", "shot_has_download", "shot_has_good", "shot_has_pro_features", "shot_id", "shot_is_case_study", "shot_is_multishot", "shot_is_published_by_team", "shot_likes_count", "shot_published_at", "shot_saves_count", "shot_title", "shot_views_count", "social_platform"]
                    },
                    'SignedIn': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "method": {
                                "enum": ["email", "google", "twitter", "google_one_tap"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "method", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'SocialClicked': {
                        "type": "object",
                        "properties": {
                            "destination_url": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "location": {
                                "enum": ["Portfolio", "Profile"]
                            },
                            "owner_id": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "social_type": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["destination_url", "is_authenticated", "location", "owner_id", "page_action", "page_controller", "page_path", "page_title", "page_url", "social_type"]
                    },
                    'ToastyClicked': {
                        "type": "object",
                        "properties": {
                            "cta_text": {
                                "type": "string"
                            },
                            "cta_type": {
                                "enum": ["internal link", "external link", "work inquiry"]
                            },
                            "destination_url": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "target_user_id": {
                                "type": "string"
                            },
                            "toasty_text": {
                                "type": "string"
                            },
                            "toasty_type": {
                                "enum": ["announcement", "hire me", "sign up"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["cta_type", "has_cta", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "toasty_text", "toasty_type"]
                    },
                    'ToastyDismissed': {
                        "type": "object",
                        "properties": {
                            "cta_text": {
                                "type": "string"
                            },
                            "cta_type": {
                                "enum": ["internal link", "external link", "work inquiry"]
                            },
                            "destination_url": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "target_user_id": {
                                "type": "string"
                            },
                            "toasty_text": {
                                "type": "string"
                            },
                            "toasty_type": {
                                "enum": ["announcement", "hire me", "sign up"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["cta_type", "has_cta", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "toasty_text", "toasty_type"]
                    },
                    'ToastyShown': {
                        "type": "object",
                        "properties": {
                            "cta_text": {
                                "type": "string"
                            },
                            "cta_type": {
                                "enum": ["internal link", "external link", "work inquiry"]
                            },
                            "destination_url": {
                                "type": "string"
                            },
                            "has_cta": {
                                "type": "boolean"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "target_user_id": {
                                "type": "string"
                            },
                            "toasty_text": {
                                "type": "string"
                            },
                            "toasty_type": {
                                "enum": ["announcement", "hire me", "sign up"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["cta_type", "has_cta", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "toasty_text", "toasty_type"]
                    },
                    'TwitterAuthenticationStarted': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "object_type": {
                                "enum": ["Page", "Modal"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "trigger": {
                                "enum": ["bucket-shot", "create-team", "download-attachment", "follow-user", "google", "homepage-load-more", "like-shot", "list-user", "logged-out-message", "member-profile", "message-user", "more-profile-shots", "new-pro-logged-out", "project-board-index", "share-courtside", "share-overtime", "shot-navigation", "shot-page-feed", "twitter", "unknown", "view-shot", "calendly-meeting"]
                            },
                            "type": {
                                "enum": ["Sign Up", "Sign In"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "object_type", "page_action", "page_controller", "page_path", "page_title", "page_url", "trigger", "type"]
                    },
                    'UpgradeCallToActionClicked': {
                        "type": "object",
                        "properties": {
                            "currency": {
                                "type": "string"
                            },
                            "current_product_billing_plan": {
                                "enum": ["monthly", "n/a", "non-recurring", "quarterly", "yearly"]
                            },
                            "current_product_name": {
                                "enum": ["Advanced Search", "Boosted Shot", "Hiring", "Job", "Pro", "Pro Business", "Workshop"]
                            },
                            "current_sub_product_name": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "location": {
                                "enum": ["Card", "Header", "Lower Pricing Tiers", "Modal", "Sidebar", "Site Nav", "Upper Pricing Tiers", "Widget", "Main Body"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "product_billing_plan": {
                                "enum": ["monthly", "non-recurring", "quarterly", "yearly", "n/a"]
                            },
                            "product_name": {
                                "enum": ["Advanced Search", "Boosted Shot", "External Good", "Hiring", "Job", "Pro", "Pro Business", "Workshop", "Course", "Good", "Project Board Post"]
                            },
                            "product_price": {
                                "type": "number",
                                "minimum": 0
                            },
                            "sub_product_name": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["currency", "current_product_name", "is_authenticated", "location", "page_action", "page_controller", "page_path", "page_title", "page_url", "product_name", "text"]
                    },
                    'UploadCallToActionClicked': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "location": {
                                "enum": ["Card", "Header", "Lower Pricing Tiers", "Modal", "Sidebar", "Site Nav", "Upper Pricing Tiers", "Widget", "Main Body"]
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "location", "page_action", "page_controller", "page_path", "page_title", "page_url", "text"]
                    },
                    'UpsellFlowEntered': {
                        "type": "object",
                        "properties": {
                            "currency": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "product_billing_plan": {
                                "enum": ["monthly", "non-recurring", "quarterly", "yearly", "n/a"]
                            },
                            "product_name": {
                                "enum": ["Advanced Search", "Boosted Shot", "External Good", "Hiring", "Job", "Pro", "Pro Business", "Workshop", "Course", "Good", "Project Board Post"]
                            },
                            "product_price": {
                                "type": "number",
                                "minimum": 0
                            },
                            "referrer": {
                                "type": "string"
                            },
                            "step_name": {
                                "type": "string"
                            },
                            "sub_product_name": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["currency", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "product_name", "referrer", "step_name"]
                    },
                    'UpsellFlowStepCompleted': {
                        "type": "object",
                        "properties": {
                            "choice": {
                                "type": "string"
                            },
                            "currency": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "product_billing_plan": {
                                "enum": ["monthly", "non-recurring", "quarterly", "yearly", "n/a"]
                            },
                            "product_name": {
                                "enum": ["Advanced Search", "Boosted Shot", "External Good", "Hiring", "Job", "Pro", "Pro Business", "Workshop", "Course", "Good", "Project Board Post"]
                            },
                            "product_price": {
                                "type": "number",
                                "minimum": 0
                            },
                            "step_name": {
                                "type": "string"
                            },
                            "sub_product_name": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["choice", "currency", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "product_name", "step_name"]
                    },
                    'UserBlocked': {
                        "type": "object",
                        "properties": {
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "user_created_at": {
                                "type": "string"
                            },
                            "user_followers": {
                                "type": "number"
                            },
                            "user_hiring_is_available": {
                                "type": "boolean"
                            },
                            "user_id": {
                                "type": "string"
                            },
                            "user_is_pro": {
                                "type": "boolean"
                            },
                            "user_type": {
                                "enum": ["Player", "Spectator", "Prospect", "Team"]
                            },
                            "user_username": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "user_created_at", "user_followers", "user_hiring_is_available", "user_id", "user_is_pro", "user_type", "user_username"]
                    },
                    'UserFollowed': {
                        "type": "object",
                        "properties": {
                            "following_id": {
                                "type": "string"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "user_created_at": {
                                "type": "string"
                            },
                            "user_followers": {
                                "type": "number"
                            },
                            "user_hiring_is_available": {
                                "type": "boolean"
                            },
                            "user_id": {
                                "type": "string"
                            },
                            "user_is_pro": {
                                "type": "boolean"
                            },
                            "user_type": {
                                "enum": ["Player", "Spectator", "Prospect", "Team"]
                            },
                            "user_username": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["following_id", "is_authenticated", "page_action", "page_controller", "page_path", "page_title", "page_url", "user_created_at", "user_followers", "user_hiring_is_available", "user_id", "user_is_pro", "user_type", "user_username"]
                    },
                    'UserMessaged': {
                        "type": "object",
                        "properties": {
                            "budget": {
                                "type": "number"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "job_location": {
                                "type": "string"
                            },
                            "job_timeline": {
                                "enum": ["Within the next week", "Within the next 2 weeks", "Within the next month", "Unknown"]
                            },
                            "job_work_type": {
                                "enum": ["Freelance", "Full-time"]
                            },
                            "message_body": {
                                "type": "string"
                            },
                            "message_id": {
                                "type": "string"
                            },
                            "message_recipient_id": {
                                "type": "string"
                            },
                            "message_thread_id": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "remote_friendly": {
                                "type": "boolean"
                            },
                            "salary_range": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["is_authenticated", "message_body", "message_id", "message_recipient_id", "message_thread_id", "page_action", "page_controller", "page_path", "page_title", "page_url"]
                    },
                    'WorkAvailabilityUpdated': {
                        "type": "object",
                        "properties": {
                            "contract_hours_min": {
                                "type": "number"
                            },
                            "education_count": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "fixed_price_min": {
                                "type": "number"
                            },
                            "has_visa": {
                                "type": "boolean"
                            },
                            "hourly_rate_min": {
                                "type": "number"
                            },
                            "is_authenticated": {
                                "type": "boolean"
                            },
                            "is_available": {
                                "type": "boolean"
                            },
                            "is_freelance": {
                                "type": "boolean"
                            },
                            "is_fulltime": {
                                "type": "boolean"
                            },
                            "is_willing_onsite": {
                                "type": "boolean"
                            },
                            "is_willing_remote": {
                                "type": "boolean"
                            },
                            "location": {
                                "type": "string"
                            },
                            "page_action": {
                                "type": "string"
                            },
                            "page_controller": {
                                "type": "string"
                            },
                            "page_path": {
                                "type": "string"
                            },
                            "page_referrer": {
                                "type": "string"
                            },
                            "page_search": {
                                "type": "string"
                            },
                            "page_title": {
                                "type": "string"
                            },
                            "page_url": {
                                "type": "string"
                            },
                            "salary_range_max": {
                                "type": "number"
                            },
                            "salary_range_min": {
                                "type": "number"
                            },
                            "skills": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "specialties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "work_history_count": {
                                "type": "number",
                                "minimum": 0
                            }
                        },
                        "additionalProperties": false,
                        "required": ["education_count", "is_authenticated", "is_available", "is_freelance", "is_fulltime", "page_action", "page_controller", "page_path", "page_title", "page_url", "work_history_count"]
                    },
                }),
                ...destinationPlugins,
                ...plugins,
            ]
        });
    }

    /**
     * Alias a user ID to another user ID.
     * @param {string} userId The user's new ID.
     * @param {string} previousId The user's previous ID.
     * @param {AliasOptions} [options] Options for this alias call.
     */
    alias(userId, previousId, options) {
        this.itly.alias(userId, previousId, options);
    }

    /**
     * Identify a user and set or update that user's properties.
     * @param {string} [userId] The user's ID.
     * @param {Object} properties The user's properties.
     * @param {string[]} [properties.ab_tests] An array of every A/B test variations the user was onboarded into.
     * @param {string} [properties.bio] The user's profile bio.
     * @param {number} properties.collections_count The number of collections that the user has created.
     * @param {number} properties.comments_count The number of comments the user has *given*.
     * @param {number} properties.comments_received_count The number of comments the user has *received*.
     * @param {string} [properties.country_code] Country code as geocoded from the location string.
     * @param {string} properties.created_at When the user account was created.
     * @param {number} properties.dribbble_user_id ID of the user account.
     * @param {string} properties.email_address Email address of the user account.
     * @param {string} [properties.email_validation_risk] Risk level returned by the email validation flow (low, medium, high, unknown); NULL when not validated
     * @param {string} [properties.first_shot_published_at] The date/time the user first published a Shot.
     * @param {number} properties.followers_count The number of followers.
     * @param {number} properties.followings_count The number of users the user follows.
     * @param {boolean} properties.has_advanced_search Whether the user currently has an active Advanced Search subscription.
     * @param {boolean} properties.has_avatar Whether the user has an avatar.
     * @param {boolean} properties.has_disabled_ads Whether the user has disabled ads.
     * @param {boolean} properties.has_hiring Whether the user currently has an active Hiring subscription.
     * @param {boolean} properties.has_intention_hire Whether the user has selected "Hiring" as an intention in the onboarding flow.
     * @param {boolean} properties.has_intention_inspiration Whether the user has selected "Inspiration" as an intention in the onboarding flow.
     * @param {boolean} properties.has_intention_share Whether the user has selected "Share their work" as an intention in the onboarding flow.
     * @param {boolean} properties.has_job Whether the user currently has an active Job subscription.
     * @param {boolean} properties.has_pro Whether the user currently has an active Pro subscription.
     * @param {boolean} properties.has_pro_business Whether the user currently has an active Pro Business Subscription.
     * @param {boolean} properties.has_pro_trial Whether the user currently has an active trial of a Pro subscription.
     * @param {boolean} properties.hiring_has_hire_me_button Whether the user has enabled the "Hire Me" button and it is currently being shown on their profile.
     * @param {number} [properties.hiring_hourly_minimum] Minimum hourly rate (in USD) from the user's work preferences.
     * @param {number} [properties.hiring_hours_minimum] Minimum hours for a contract from the user's work preferences.
     * @param {boolean} properties.hiring_is_available_for_work Whether the user is currently available for work.
     * @param {boolean} properties.hiring_is_freelance Whether the user has selected "Freelancer / Contract" in their work preferences.
     * @param {boolean} properties.hiring_is_fulltime Whether the user has selected "Full-Time" in their work preferences.
     * @param {boolean} properties.hiring_is_willing_onsite Whether the user has selected that they are willing to work onsite in their work preferences.
     * @param {boolean} properties.hiring_is_willing_remote Whether the user has selected that they are willing to work remotely in their work preferences.
     * @param {number} [properties.hiring_project_mininum] Minimum fixed price budget (in USD) from the user's work preferences.
     * @param {boolean} properties.is_suspended Whether the user account is suspended.
     * @param {boolean} properties.is_team_member Whether the user is a member of a Team.
     * @param {boolean} properties.is_team_owner Whether the user is an owner of a Team.
     * @param {boolean} properties.is_verified Whether the user has completed the email verification of their account.
     * @param {string} [properties.last_shot_published_at] The date/time the user last published a Shot.
     * @param {number} properties.likes_count The number of likes the user has *given*.
     * @param {number} properties.likes_received_count The number of likes the user has *received*.
     * @param {string} [properties.location] Location string as entered by the user in their account settings.
     * @param {string} properties.name Name of the user.
     * @param {number} properties.projects_count The number of projects that the user has created.
     * @param {number} properties.shots_count Number of shots published by the user.
     * @param {string} [properties.state_code] State code as geocoded from the location string.
     * @param {string} properties.user_type Type of user account (i.e. Spectator, Prospect, Player, Team).
     * @param {string} properties.username Username of the user account.
     * @param {IdentifyOptions} [options] Options for this identify call.
     */
    identify(userId, properties, options) {
        this.itly.identify(userId, properties, options);
    }

    /**
     * Associate the current user with a group.
     * @param {string} groupId The group's ID.
     * @param {GroupOptions} [options] Options for this group call.
     */
    group(groupId, options) {
        this.itly.group(groupId, undefined, options);
    }

    /**
     * Track a page view with a set of page properties.
     * @param {string} category The page's category.
     * @param {string} name The page's name.
     * @param {Object} properties Additional page properties.
     * @param {string} properties.action The action on the controller that generated the page.
     * @param {string} properties.controller The Dribbble app's controller that generated the page.
     * @param {string} properties.path The canonical path of the page.
     * @param {string} properties.referer The URL of the previous page.
     * @param {string} properties.search Query string portion of the page URL.
     * @param {string} properties.title The title of the page.
     * @param {string} properties.url The full URL of the page.
     * @param {PageOptions} [options] Options for this page call.
     */
    page(category, name, properties, options) {
        this.itly.page(category, name, properties, options);
    }

    /**
     * Called when a user clicks on an ad.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.ad_id The Ad's ID, as given by the provider.  For Dribbble's Boosted Shots, this should allow us to link the Ad events back to the Ad record created internally.
     * @param {string} properties.ad_link The Ad link.
     * @param {string} properties.ad_link_type Ads always have a link, but may or may not have a CTA. If not a Boosted Shot, record "Custom URL".
     * @param {string} [properties.ad_text] The Ad's text. May be NULL for Boosted Shots.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {boolean} properties.has_cta Whether the ad has a CTA button.
     * @param {string} properties.impression_id The ID of the impression, must be unique across all impressions. It is used to link all Ad events (served, viewed, clicked, etc.) of the same impression together.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.placement Placement where the ad is shown. Once available this should match back-end placement values.
     * @param {string} properties.provider Name of the service providing the ad.
     * @param {string} properties.unit_type Type of ad (i.e. Boosted Shots, Display, etc.)
     * @param {TrackOptions} [options] Options for this track call.
     */
    adClicked(properties, options) {
        this.itly.track(new AdClicked(properties), options);
    }

    /**
     * Called when an ad enters the users viewport.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.ad_id The Ad's ID, as given by the provider.  For Dribbble's Boosted Shots, this should allow us to link the Ad events back to the Ad record created internally.
     * @param {string} properties.ad_link The Ad link.
     * @param {string} properties.ad_link_type Ads always have a link, but may or may not have a CTA. If not a Boosted Shot, record "Custom URL".
     * @param {string} [properties.ad_text] The Ad's text. May be NULL for Boosted Shots.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {boolean} properties.has_cta Whether the ad has a CTA button.
     * @param {string} properties.impression_id The ID of the impression, must be unique across all impressions. It is used to link all Ad events (served, viewed, clicked, etc.) of the same impression together.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.placement Placement where the ad is shown. Once available this should match back-end placement values.
     * @param {string} properties.provider Name of the service providing the ad.
     * @param {string} properties.unit_type Type of ad (i.e. Boosted Shots, Display, etc.)
     * @param {TrackOptions} [options] Options for this track call.
     */
    adImpressionViewed(properties, options) {
        this.itly.track(new AdImpressionViewed(properties), options);
    }

    /**
     * Called when an ad can be served and a request is sent from the front-end to the back-end to determine which ad should be shown.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.impression_id The ID of the impression, must be unique across all impressions. It is used to link all Ad events (served, viewed, clicked, etc.) of the same impression together.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.placement Placement where the ad is shown. Once available this should match back-end placement values.
     * @param {string} properties.provider Name of the service providing the ad.
     * @param {string} properties.unit_type Type of ad (i.e. Boosted Shots, Display, etc.)
     * @param {TrackOptions} [options] Options for this track call.
     */
    adRequested(properties, options) {
        this.itly.track(new AdRequested(properties), options);
    }

    /**
     * Called when a request for an ad fails to return an ad.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.impression_id The ID of the impression, must be unique across all impressions. It is used to link all Ad events (served, viewed, clicked, etc.) of the same impression together.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.placement Placement where the ad is shown. Once available this should match back-end placement values.
     * @param {string} properties.provider Name of the service providing the ad.
     * @param {string} properties.reason Reason for the request failure.
     * @param {string} properties.unit_type Type of ad (i.e. Boosted Shots, Display, etc.)
     * @param {TrackOptions} [options] Options for this track call.
     */
    adRequestFailed(properties, options) {
        this.itly.track(new AdRequestFailed(properties), options);
    }

    /**
     * Called when an ad is served.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.ad_id The Ad's ID, as given by the provider.  For Dribbble's Boosted Shots, this should allow us to link the Ad events back to the Ad record created internally.
     * @param {string} properties.ad_link The Ad link.
     * @param {string} properties.ad_link_type Ads always have a link, but may or may not have a CTA. If not a Boosted Shot, record "Custom URL".
     * @param {string} [properties.ad_text] The Ad's text. May be NULL for Boosted Shots.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {boolean} properties.has_cta Whether the ad has a CTA button.
     * @param {string} properties.impression_id The ID of the impression, must be unique across all impressions. It is used to link all Ad events (served, viewed, clicked, etc.) of the same impression together.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.placement Placement where the ad is shown. Once available this should match back-end placement values.
     * @param {string} properties.provider Name of the service providing the ad.
     * @param {string} properties.unit_type Type of ad (i.e. Boosted Shots, Display, etc.)
     * @param {TrackOptions} [options] Options for this track call.
     */
    adServed(properties, options) {
        this.itly.track(new AdServed(properties), options);
    }

    /**
     * Called when a user clicks on an affiliate link.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {string} properties.ad_id The ad id assigned by dribbble.
     * @param {string} properties.ad_link The ad link.
     * @param {string} [properties.ad_text] The description on the ad.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {boolean} properties.has_cta Whether or not the ad has a button.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.owner The name of the company that the advertisement is for.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    affiliateLinkClicked(properties, options) {
        this.itly.track(new AffiliateLinkClicked(properties), options);
    }

    /**
     * Triggers when a user has started the education application flow
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    applicationFlowEntered(properties, options) {
        this.itly.track(new ApplicationFlowEntered(properties), options);
    }

    /**
     * Triggers when a user has completed a specific step in the education application flow
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {string[]} [properties.application_design_tools] The user's answer to the design tools question, in the application flow.
     * @param {string[]} [properties.application_education] The user's answer to the education level question, in the application flow.
     * @param {string[]} [properties.application_experience] The user's answer to the experience question, in the application flow.
     * @param {string} [properties.application_location] The user's answer to the location question, in the application flow.
     * @param {string} properties.application_step_name The step in the application flow
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    applicationFlowStepCompleted(properties, options) {
        this.itly.track(new ApplicationFlowStepCompleted(properties), options);
    }

    /**
     * Tracks when a user was prompted with the authentication page/modal, whether with the Sign Up or Sign In version.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.object_type Type of web object that is viewed (Page or Modal)
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.trigger The button that triggered the authentication.
     * @param {string} properties.type Type of authentication (Sign Up or Sign In).
     * @param {TrackOptions} [options] Options for this track call.
     */
    authenticationViewed(properties, options) {
        this.itly.track(new AuthenticationViewed(properties), options);
    }

    /**
     * Called when a user views any step of the Boosted Shot modal purchase flow.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.referrer Referrer category of the previous action or page (if known).
     * @param {string} properties.step_name The name of the step viewed by the user.
     * @param {TrackOptions} [options] Options for this track call.
     */
    boostedShotModalViewed(properties, options) {
        this.itly.track(new BoostedShotModalViewed(properties), options);
    }

    /**
     * A generic call to action event that can be used for more specific or one-off call to action buttons.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.location The location on page of the element clicked.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.text The text of the element clicked. !!These values should be hard-coded, otherwise, browser translation on the client-side affect the text being recorded!!
     * @param {TrackOptions} [options] Options for this track call.
     */
    callToActionClicked(properties, options) {
        this.itly.track(new CallToActionClicked(properties), options);
    }

    /**
     * Tracks when a user completes a product checkout page or modal.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {string} properties.currency Property has no description in tracking plan.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {boolean} [properties.is_trial] Whether or not a trial is being activated.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.product_billing_plan] The product's billing plan (i.e. monthly, quarterly, yearly, non-recurring).
     * @param {string} properties.product_name The product's name.
     * @param {number} [properties.product_price] The default price of the product, excluding all discounts.
     * @param {number} properties.product_price_paid The product price paid in USD (includes discounts).
     * @param {string} [properties.sub_product_name] The sub-product's name.
     * @param {TrackOptions} [options] Options for this track call.
     */
    checkoutCompleted(properties, options) {
        this.itly.track(new CheckoutCompleted(properties), options);
    }

    /**
     * Tracks when a user views any product checkout page or modal.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.currency Property has no description in tracking plan.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {boolean} [properties.is_trial] Whether or not a trial is being activated.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.product_billing_plan] The product's billing plan (i.e. monthly, quarterly, yearly, non-recurring).
     * @param {string} properties.product_name The product's name.
     * @param {number} [properties.product_price] The default price of the product, excluding all discounts.
     * @param {string} [properties.sub_product_name] The sub-product's name.
     * @param {TrackOptions} [options] Options for this track call.
     */
    checkoutViewed(properties, options) {
        this.itly.track(new CheckoutViewed(properties), options);
    }

    /**
     * Tracks when a user creates a Collection.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.collection_created_at The date/time the collection was created.
     * @param {string} properties.collection_id ID of the collection.
     * @param {number} properties.collection_shot_count The number of Shots currently in the collection.
     * @param {string} properties.collection_title The title of the collection.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    collectionCreated(properties, options) {
        this.itly.track(new CollectionCreated(properties), options);
    }

    /**
     * Tracks when a successful custom domain purchase is completed.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {string} properties.domain The domain name that was purchased.
     * @param {TrackOptions} [options] Options for this track call.
     */
    customDomainPurchased(properties, options) {
        this.itly.track(new CustomDomainPurchased(properties), options);
    }

    /**
     * Called when a user clicks on the Apply or Re-apply button to become a Designer.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.has_complete_profile Whether or not the user has completed their profile upon submitting their application.
     * @param {boolean} properties.has_work_preferences Whether or not the user has set up their work preferences upon submitting their application.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    designerApplicationSubmitted(properties, options) {
        this.itly.track(new DesignerApplicationSubmitted(properties), options);
    }

    /**
     * Called when a user views a prompt to get a Designer account.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.has_complete_profile Whether or not the user has completed their profile upon viewing the application.
     * @param {boolean} properties.has_uploaded_work Whether or not the user has uploaded work upon viewing their application.
     * @param {boolean} properties.has_work_preferences Whether or not the user has set up their work preferences upon viewing the application.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.location The location on page of the element clicked.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.text The text of the element clicked. !!These values should be hard-coded, otherwise, browser translation on the client-side affect the text being recorded!!
     * @param {TrackOptions} [options] Options for this track call.
     */
    designerApplicationViewed(properties, options) {
        this.itly.track(new DesignerApplicationViewed(properties), options);
    }

    /**
     * Called when a user executes a Designer Search.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {boolean} properties.is_saved_search Whether this event was triggered by a Saved Search.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string[]} [properties.results] An array of user IDs ordered by their position in the result list.
     * @param {number} [properties.results_page_count] Number of results in the current page.
     * @param {number} [properties.results_total_count] The total number of results returned by the search query (ignoring pagination).
     * @param {string} [properties.search_current_role] The Current Role filter.
     * @param {string[]} [properties.search_experience_levels] The Experience Level filter.
     * @param {boolean} properties.search_has_subscription Whether the user is currently subscribed to Designer Search.
     * @param {string} [properties.search_job_type] The Job Type filter.
     * @param {string} [properties.search_location] The Location filter; as entered by the user.
     * @param {string} [properties.search_location_country_code] The geolocated country code from the Location filter.
     * @param {boolean} [properties.search_location_is_geolocated] Whether the Location filter was successfully geolocated; NULL if a location is not provided.
     * @param {number} [properties.search_location_latitude] The geolocated latitude from the Location filter.
     * @param {number} [properties.search_location_longitude] The geolocated longitude from the Location filter.
     * @param {string} [properties.search_location_state_code] The geolocated state code from the Location filter.
     * @param {boolean} [properties.search_onsite_position] The On-side Position filter. TRUE if checked, NULL otherwise.
     * @param {string} [properties.search_previous_company] The Previous Company filter.
     * @param {string} [properties.search_query] The search query.
     * @param {boolean} [properties.search_remote_position] The Remote Position filter. TRUE if checked, NULL otherwise.
     * @param {number} [properties.search_salary_range_max] The Max value of the Salary Range filter.
     * @param {number} [properties.search_salary_range_min] The Min value of the Salary Range filter.
     * @param {string[]} [properties.search_specialties] The Specialties filter.
     * @param {TrackOptions} [options] Options for this track call.
     */
    designerSearched(properties, options) {
        this.itly.track(new DesignerSearched(properties), options);
    }

    /**
     * Called when a user bookmarks a Designer Search result.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.search_current_role] The Current Role filter.
     * @param {string[]} [properties.search_experience_levels] The Experience Level filter.
     * @param {boolean} properties.search_has_subscription Whether the user is currently subscribed to Designer Search.
     * @param {string} [properties.search_job_type] The Job Type filter.
     * @param {string} [properties.search_location] The Location filter; as entered by the user.
     * @param {string} [properties.search_location_country_code] The geolocated country code from the Location filter.
     * @param {boolean} [properties.search_location_is_geolocated] Whether the Location filter was successfully geolocated; NULL if a location is not provided.
     * @param {number} [properties.search_location_latitude] The geolocated latitude from the Location filter.
     * @param {number} [properties.search_location_longitude] The geolocated longitude from the Location filter.
     * @param {string} [properties.search_location_state_code] The geolocated state code from the Location filter.
     * @param {boolean} [properties.search_onsite_position] The On-side Position filter. TRUE if checked, NULL otherwise.
     * @param {string} [properties.search_previous_company] The Previous Company filter.
     * @param {string} [properties.search_query] The search query.
     * @param {boolean} [properties.search_remote_position] The Remote Position filter. TRUE if checked, NULL otherwise.
     * @param {number} [properties.search_salary_range_max] The Max value of the Salary Range filter.
     * @param {number} [properties.search_salary_range_min] The Min value of the Salary Range filter.
     * @param {string[]} [properties.search_specialties] The Specialties filter.
     * @param {string} properties.user_id User ID of the Designer Search result.
     * @param {TrackOptions} [options] Options for this track call.
     */
    designerSearchResultBookmarked(properties, options) {
        this.itly.track(new DesignerSearchResultBookmarked(properties), options);
    }

    /**
     * Called when a user expands a Designer Search result to view more details.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.search_current_role] The Current Role filter.
     * @param {string[]} [properties.search_experience_levels] The Experience Level filter.
     * @param {boolean} properties.search_has_subscription Whether the user is currently subscribed to Designer Search.
     * @param {string} [properties.search_job_type] The Job Type filter.
     * @param {string} [properties.search_location] The Location filter; as entered by the user.
     * @param {string} [properties.search_location_country_code] The geolocated country code from the Location filter.
     * @param {boolean} [properties.search_location_is_geolocated] Whether the Location filter was successfully geolocated; NULL if a location is not provided.
     * @param {number} [properties.search_location_latitude] The geolocated latitude from the Location filter.
     * @param {number} [properties.search_location_longitude] The geolocated longitude from the Location filter.
     * @param {string} [properties.search_location_state_code] The geolocated state code from the Location filter.
     * @param {boolean} [properties.search_onsite_position] The On-side Position filter. TRUE if checked, NULL otherwise.
     * @param {string} [properties.search_previous_company] The Previous Company filter.
     * @param {string} [properties.search_query] The search query.
     * @param {boolean} [properties.search_remote_position] The Remote Position filter. TRUE if checked, NULL otherwise.
     * @param {number} [properties.search_salary_range_max] The Max value of the Salary Range filter.
     * @param {number} [properties.search_salary_range_min] The Min value of the Salary Range filter.
     * @param {string[]} [properties.search_specialties] The Specialties filter.
     * @param {string} properties.user_id User ID of the Designer Search result.
     * @param {TrackOptions} [options] Options for this track call.
     */
    designerSearchResultExpanded(properties, options) {
        this.itly.track(new DesignerSearchResultExpanded(properties), options);
    }

    /**
     * Called when a user unbookmarks a Designer Search result.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.search_current_role] The Current Role filter.
     * @param {string[]} [properties.search_experience_levels] The Experience Level filter.
     * @param {boolean} properties.search_has_subscription Whether the user is currently subscribed to Designer Search.
     * @param {string} [properties.search_job_type] The Job Type filter.
     * @param {string} [properties.search_location] The Location filter; as entered by the user.
     * @param {string} [properties.search_location_country_code] The geolocated country code from the Location filter.
     * @param {boolean} [properties.search_location_is_geolocated] Whether the Location filter was successfully geolocated; NULL if a location is not provided.
     * @param {number} [properties.search_location_latitude] The geolocated latitude from the Location filter.
     * @param {number} [properties.search_location_longitude] The geolocated longitude from the Location filter.
     * @param {string} [properties.search_location_state_code] The geolocated state code from the Location filter.
     * @param {boolean} [properties.search_onsite_position] The On-side Position filter. TRUE if checked, NULL otherwise.
     * @param {string} [properties.search_previous_company] The Previous Company filter.
     * @param {string} [properties.search_query] The search query.
     * @param {boolean} [properties.search_remote_position] The Remote Position filter. TRUE if checked, NULL otherwise.
     * @param {number} [properties.search_salary_range_max] The Max value of the Salary Range filter.
     * @param {number} [properties.search_salary_range_min] The Min value of the Salary Range filter.
     * @param {string[]} [properties.search_specialties] The Specialties filter.
     * @param {string} properties.user_id User ID of the Designer Search result.
     * @param {TrackOptions} [options] Options for this track call.
     */
    designerSearchResultUnbookmarked(properties, options) {
        this.itly.track(new DesignerSearchResultUnbookmarked(properties), options);
    }

    /**
     * Called when a user creates a Saved Search in Designer Search.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.search_current_role] The Current Role filter.
     * @param {string[]} [properties.search_experience_levels] The Experience Level filter.
     * @param {boolean} properties.search_has_subscription Whether the user is currently subscribed to Designer Search.
     * @param {string} [properties.search_job_type] The Job Type filter.
     * @param {string} [properties.search_location] The Location filter; as entered by the user.
     * @param {string} [properties.search_location_country_code] The geolocated country code from the Location filter.
     * @param {boolean} [properties.search_location_is_geolocated] Whether the Location filter was successfully geolocated; NULL if a location is not provided.
     * @param {number} [properties.search_location_latitude] The geolocated latitude from the Location filter.
     * @param {number} [properties.search_location_longitude] The geolocated longitude from the Location filter.
     * @param {string} [properties.search_location_state_code] The geolocated state code from the Location filter.
     * @param {boolean} [properties.search_onsite_position] The On-side Position filter. TRUE if checked, NULL otherwise.
     * @param {string} [properties.search_previous_company] The Previous Company filter.
     * @param {string} [properties.search_query] The search query.
     * @param {boolean} [properties.search_remote_position] The Remote Position filter. TRUE if checked, NULL otherwise.
     * @param {number} [properties.search_salary_range_max] The Max value of the Salary Range filter.
     * @param {number} [properties.search_salary_range_min] The Min value of the Salary Range filter.
     * @param {string[]} [properties.search_specialties] The Specialties filter.
     * @param {TrackOptions} [options] Options for this track call.
     */
    designerSearchSaved(properties, options) {
        this.itly.track(new DesignerSearchSaved(properties), options);
    }

    /**
     * Tracks when a user completes the information form for Education.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {string} properties.geo_location The geographic location entered by the user.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    educationInformationFormCompleted(properties, options) {
        this.itly.track(new EducationInformationFormCompleted(properties), options);
    }

    /**
     * Called when a user sends a message on a Freelance Project.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.message_body Body of the Message.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {number} properties.project_age_in_days Age of the project in days. Starts at 0.
     * @param {string} properties.project_budget The budget for the project.
     * @param {string} properties.project_description The project's description.
     * @param {string} properties.project_expires_at The date at which the project is set to expire.
     * @param {string} properties.project_id The project's ID.
     * @param {string} properties.project_owner_id The user ID of the project owner.
     * @param {string[]} properties.project_specialties The project's design specialties (can have more than one)
     * @param {string} properties.project_title The project's title.
     * @param {TrackOptions} [options] Options for this track call.
     */
    freelanceProjectMessaged(properties, options) {
        this.itly.track(new FreelanceProjectMessaged(properties), options);
    }

    /**
     * Called when a user executes a search query on the Freelance Project board.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string[]} [properties.search_budget] The budget filter.
     * @param {string} [properties.search_keyword] The keyword filter.
     * @param {string[]} [properties.search_project_specialties] The project specialty filter.
     * @param {TrackOptions} [options] Options for this track call.
     */
    freelanceProjectSearched(properties, options) {
        this.itly.track(new FreelanceProjectSearched(properties), options);
    }

    /**
     * Tracks when a new Freelance Project is submitted for review.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.project_budget The project's budget.
     * @param {string} properties.project_description The project's description.
     * @param {string} properties.project_owner_id The user ID of the project owner.
     * @param {string[]} properties.project_specialties The project's design specialties (can have more than one)
     * @param {string} properties.project_title The project's title.
     * @param {TrackOptions} [options] Options for this track call.
     */
    freelanceProjectSubmitted(properties, options) {
        this.itly.track(new FreelanceProjectSubmitted(properties), options);
    }

    /**
     * Called when a user views a Freelance Project.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {number} properties.project_age_in_days Age of the project in days. Starts at 0.
     * @param {string} properties.project_budget The budget for the project.
     * @param {string} properties.project_description The project's description.
     * @param {string} properties.project_expires_at The date at which the project is set to expire.
     * @param {string} properties.project_id The project's ID.
     * @param {string} properties.project_owner_id The user ID of the project owner.
     * @param {string[]} properties.project_specialties The project's design specialties (can have more than one)
     * @param {string} properties.project_title The project's title.
     * @param {TrackOptions} [options] Options for this track call.
     */
    freelanceProjectViewed(properties, options) {
        this.itly.track(new FreelanceProjectViewed(properties), options);
    }

    /**
     * Tracks when a user starts the authentication process with Google (i.e. Sign in with Google)
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.object_type Type of web object that is viewed (Page or Modal)
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.trigger The button that triggered the authentication.
     * @param {string} properties.type Type of authentication (Sign Up or Sign In).
     * @param {TrackOptions} [options] Options for this track call.
     */
    googleAuthenticationStarted(properties, options) {
        this.itly.track(new GoogleAuthenticationStarted(properties), options);
    }

    /**
     * Called when a user clicks on an item in the website's header navigation bar.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.category Name of the category, if the item clicked is included in a navigation drawer.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.item Name of the item clicked.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    headerNavigationClicked(properties, options) {
        this.itly.track(new HeaderNavigationClicked(properties), options);
    }

    /**
     * Tracks when a user has clicked on a CTA in an intro video.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {string} properties.cta_text The text of the call to action on the video.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.video_location The location of the video on the page.
     * @param {string} [properties.video_sub_location] The sub-location of the video on the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    introVideoCallToActionClicked(properties, options) {
        this.itly.track(new IntroVideoCallToActionClicked(properties), options);
    }

    /**
     * Tracks when an intro video has been dismissed.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.variant The video display type.
     * @param {string} properties.video_location The location of the video on the page.
     * @param {string} [properties.video_sub_location] The sub-location of the video on the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    introVideoDismissed(properties, options) {
        this.itly.track(new IntroVideoDismissed(properties), options);
    }

    /**
     * Tracks when an intro video has been displayed.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.video_location The location of the video on the page.
     * @param {string} [properties.video_sub_location] The sub-location of the video on the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    introVideoDisplayed(properties, options) {
        this.itly.track(new IntroVideoDisplayed(properties), options);
    }

    /**
     * Tracks when an intro video has been expanded.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.video_location The location of the video on the page.
     * @param {string} [properties.video_sub_location] The sub-location of the video on the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    introVideoExpanded(properties, options) {
        this.itly.track(new IntroVideoExpanded(properties), options);
    }

    /**
     * Called when a user clicks on the "Apply" button on a Job listing.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.job_apply_link URL of the Apply button.
     * @param {string} properties.job_company Name of the company associated with the Job.
     * @param {string} properties.job_designer_type Type of designer.
     * @param {boolean} properties.job_has_photo Whether the Job has a photo.
     * @param {string} properties.job_id ID of the Job.
     * @param {string} [properties.job_location] Location string as input by the user.
     * @param {string} [properties.job_location_country] Country code as geocoded from the location string.
     * @param {string} [properties.job_location_state] State code as geocoded from the location string.
     * @param {string} properties.job_location_type The type of Job location (i.e. onsite, remote, both)
     * @param {string} [properties.job_role_type] Type of role.
     * @param {string} [properties.job_social_facebook] Facebook URL from Social Links section.
     * @param {string} [properties.job_social_instagram] Instagram URL from Social Links section.
     * @param {string} [properties.job_social_twitter] Twitter URL from Social Links section.
     * @param {string} [properties.job_social_website] Website URL from Social Links section.
     * @param {string} properties.job_title Title of the Job.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    jobApplied(properties, options) {
        this.itly.track(new JobApplied(properties), options);
    }

    /**
     * Called when a user executes a search query on the Job board.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.freelance Freelance/Contract selector.
     * @param {boolean} properties.full_time Full Time selector.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} [properties.keyword] Keyword field.
     * @param {string} [properties.location] Location field.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {boolean} [properties.remote_friendly] Remote Friendly selector.
     * @param {string[]} [properties.specialties] Specialties field.
     * @param {TrackOptions} [options] Options for this track call.
     */
    jobSearched(properties, options) {
        this.itly.track(new JobSearched(properties), options);
    }

    /**
     * Called when a user views a Job listing. Tracked as an individual event (as opposed to regular Pageview) to recorded Job metadata.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.job_apply_link URL of the Apply button.
     * @param {string} properties.job_company Name of the company associated with the Job.
     * @param {string} properties.job_designer_type Type of designer.
     * @param {boolean} properties.job_has_photo Whether the Job has a photo.
     * @param {string} properties.job_id ID of the Job.
     * @param {string} [properties.job_location] Location string as input by the user.
     * @param {string} [properties.job_location_country] Country code as geocoded from the location string.
     * @param {string} [properties.job_location_state] State code as geocoded from the location string.
     * @param {string} properties.job_location_type The type of Job location (i.e. onsite, remote, both)
     * @param {string} [properties.job_role_type] Type of role.
     * @param {string} [properties.job_social_facebook] Facebook URL from Social Links section.
     * @param {string} [properties.job_social_instagram] Instagram URL from Social Links section.
     * @param {string} [properties.job_social_twitter] Twitter URL from Social Links section.
     * @param {string} [properties.job_social_website] Website URL from Social Links section.
     * @param {string} properties.job_title Title of the Job.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    jobViewed(properties, options) {
        this.itly.track(new JobViewed(properties), options);
    }

    /**
     * Called when a user clicks on a CTA on a Modal
     *
     * Owner: gisela@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {string} properties.cta_type The type of cta; what action does it trigger
     * @param {string} [properties.destination_url] The CTA link. Required if cta_type is a link.
     * @param {boolean} properties.has_cta Whether the toasty has a CTA button.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.modal_text Records the modal's text as presented to the user
     * @param {string} properties.modal_type The type of modal (use case)
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.target_user_id] User ID of the user hte modal is shown to
     * @param {TrackOptions} [options] Options for this track call.
     */
    modalClicked(properties, options) {
        this.itly.track(new ModalClicked(properties), options);
    }

    /**
     * Called when a user clicks the dismiss button on a Modal
     *
     * Owner: gisela@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {string} properties.cta_type The type of cta; what action does it trigger
     * @param {string} [properties.destination_url] The CTA link. Required if cta_type is a link.
     * @param {boolean} properties.has_cta Whether the toasty has a CTA button.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.modal_text Records the modal's text as presented to the user
     * @param {string} properties.modal_type The type of modal (use case)
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.target_user_id] User ID of the user hte modal is shown to
     * @param {TrackOptions} [options] Options for this track call.
     */
    modalDismissed(properties, options) {
        this.itly.track(new ModalDismissed(properties), options);
    }

    /**
     * Called when a Modal is shown to a user
     *
     * Owner: gisela@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {string} properties.cta_type The type of cta; what action does it trigger
     * @param {string} [properties.destination_url] The CTA link. Required if cta_type is a link.
     * @param {boolean} properties.has_cta Whether the toasty has a CTA button.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.modal_text Records the modal's text as presented to the user
     * @param {string} properties.modal_type The type of modal (use case)
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.target_user_id] User ID of the user hte modal is shown to
     * @param {TrackOptions} [options] Options for this track call.
     */
    modalShown(properties, options) {
        this.itly.track(new ModalShown(properties), options);
    }

    /**
     * Tracks when a user completes the Scope (Are you hiring as yourself or for a company?) step in the Hiring-Freelance branch of the onboarding flow. 
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.scope Answer for the question "Are you hiring as yourself or for a company?"; either "As myself", or "As a company".
     * @param {TrackOptions} [options] Options for this track call.
     */
    onboardingHiringScopeCompleted(properties, options) {
        this.itly.track(new OnboardingHiringScopeCompleted(properties), options);
    }

    /**
     * Tracks when a user completes the Work Type step in the Hiring branch of the onboarding flow.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.work_type Type of work the user is hiring for.
     * @param {TrackOptions} [options] Options for this track call.
     */
    onboardingHiringWorkTypeCompleted(properties, options) {
        this.itly.track(new OnboardingHiringWorkTypeCompleted(properties), options);
    }

    /**
     * Tracks when a user completes the Intentions step of the onboarding flow.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.has_intention_hire Whether the user selected the are looking to hire designers.
     * @param {boolean} properties.has_intention_inspiration Whether the user selected they are looking for design inspiration.
     * @param {boolean} properties.has_intention_share Whether the user selected they are looking to share their work as a designer.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    onboardingIntentionsCompleted(properties, options) {
        this.itly.track(new OnboardingIntentionsCompleted(properties), options);
    }

    /**
     * Tracks when a user completes the Profile step of the onboarding flow.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.has_avatar Whether the user added an avatar.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.location Value entered for the location field.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    onboardingProfileCompleted(properties, options) {
        this.itly.track(new OnboardingProfileCompleted(properties), options);
    }

    /**
     * Called when a user views a page. Only used for Amplitude. Referrer, UTM, and GCLID are automatically recorded by Amplitude.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    pageViewed(properties, options) {
        this.itly.track(new PageViewed(properties), options);
    }

    /**
     * Tracks when a user clicks on a selected call-to-action with the intent to purchase a product (i.e. not all CTAs are tracked).
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.currency Property has no description in tracking plan.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.location The location on page of the element clicked.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.product_billing_plan] The product's billing plan (i.e. monthly, quarterly, yearly, non-recurring).
     * @param {string} properties.product_name The product's name.
     * @param {number} [properties.product_price] The default price of the product, excluding all discounts.
     * @param {string} [properties.sub_product_name] The sub-product's name.
     * @param {string} properties.text The text of the element clicked. !!These values should be hard-coded, otherwise, browser translation on the client-side affect the text being recorded!!
     * @param {TrackOptions} [options] Options for this track call.
     */
    purchaseCallToActionClicked(properties, options) {
        this.itly.track(new PurchaseCallToActionClicked(properties), options);
    }

    /**
     * Tracks when a user comments on a Shot.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.comment The body of the comment.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {number} properties.shot_attachment_count Number of attachments.
     * @param {number} properties.shot_comments_count The Shot's current number of comments.
     * @param {string} properties.shot_format The type of format of the Shot.
     * @param {boolean} properties.shot_has_download Whether the Shot has a downloadable asset.
     * @param {boolean} properties.shot_has_good Whether the Shot has a Good for Sale.
     * @param {boolean} properties.shot_has_pro_features Whether the Shot allows for pro features.
     * @param {number} [properties.shot_height] Height of the Shot in pixels.
     * @param {string} properties.shot_id ID of the Shots
     * @param {boolean} properties.shot_is_case_study Whether or not the shot is a case study.
     * @param {boolean} properties.shot_is_multishot Whether the Shot is a multishot.
     * @param {boolean} properties.shot_is_published_by_team Whether the Shot is published by a Team (either directly, or published as).
     * @param {number} properties.shot_likes_count The Shot's current number of likes.
     * @param {string} properties.shot_published_at The date/time when the Shot was published.
     * @param {number} properties.shot_saves_count The Shot's current number of saves.
     * @param {string} properties.shot_title Title of the Shot
     * @param {number} properties.shot_views_count The Shot's current number of views.
     * @param {number} [properties.shot_width] Width of the Shot in pixels.
     * @param {TrackOptions} [options] Options for this track call.
     */
    shotCommented(properties, options) {
        this.itly.track(new ShotCommented(properties), options);
    }

    /**
     * Called when a user filters any Shot feed using the Filters menu.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} [properties.category] The Shot Category selector.
     * @param {string} [properties.color] The Color filter (hex value selector)
     * @param {string} [properties.downloads] The Downloads filter (dropdown menu)
     * @param {string} [properties.feed] The Feed filter (dropdown menu).
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} [properties.made_with] The Made With filter (dropdown menu)
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.tags] The Tags filter (string with input validation).
     * @param {TrackOptions} [options] Options for this track call.
     */
    shotFeedFiltered(properties, options) {
        this.itly.track(new ShotFeedFiltered(properties), options);
    }

    /**
     * Tracks when a user likes a Shot.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {number} properties.shot_attachment_count Number of attachments.
     * @param {number} properties.shot_comments_count The Shot's current number of comments.
     * @param {string} properties.shot_format The type of format of the Shot.
     * @param {boolean} properties.shot_has_download Whether the Shot has a downloadable asset.
     * @param {boolean} properties.shot_has_good Whether the Shot has a Good for Sale.
     * @param {boolean} properties.shot_has_pro_features Whether the Shot allows for pro features.
     * @param {number} [properties.shot_height] Height of the Shot in pixels.
     * @param {string} properties.shot_id ID of the Shots
     * @param {boolean} properties.shot_is_case_study Whether or not the shot is a case study.
     * @param {boolean} properties.shot_is_multishot Whether the Shot is a multishot.
     * @param {boolean} properties.shot_is_published_by_team Whether the Shot is published by a Team (either directly, or published as).
     * @param {number} properties.shot_likes_count The Shot's current number of likes.
     * @param {string} properties.shot_published_at The date/time when the Shot was published.
     * @param {number} properties.shot_saves_count The Shot's current number of saves.
     * @param {string} properties.shot_title Title of the Shot
     * @param {number} properties.shot_views_count The Shot's current number of views.
     * @param {number} [properties.shot_width] Width of the Shot in pixels.
     * @param {TrackOptions} [options] Options for this track call.
     */
    shotLiked(properties, options) {
        this.itly.track(new ShotLiked(properties), options);
    }

    /**
     * Called when a user reports a Shot.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.description The description entered by the user explaining the report.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {number} properties.shot_attachment_count Number of attachments.
     * @param {number} properties.shot_comments_count The Shot's current number of comments.
     * @param {string} properties.shot_format The type of format of the Shot.
     * @param {boolean} properties.shot_has_download Whether the Shot has a downloadable asset.
     * @param {boolean} properties.shot_has_good Whether the Shot has a Good for Sale.
     * @param {boolean} properties.shot_has_pro_features Whether the Shot allows for pro features.
     * @param {number} [properties.shot_height] Height of the Shot in pixels.
     * @param {string} properties.shot_id ID of the Shots
     * @param {boolean} properties.shot_is_case_study Whether or not the shot is a case study.
     * @param {boolean} properties.shot_is_multishot Whether the Shot is a multishot.
     * @param {boolean} properties.shot_is_published_by_team Whether the Shot is published by a Team (either directly, or published as).
     * @param {number} properties.shot_likes_count The Shot's current number of likes.
     * @param {string} properties.shot_published_at The date/time when the Shot was published.
     * @param {number} properties.shot_saves_count The Shot's current number of saves.
     * @param {string} properties.shot_title Title of the Shot
     * @param {number} properties.shot_views_count The Shot's current number of views.
     * @param {number} [properties.shot_width] Width of the Shot in pixels.
     * @param {TrackOptions} [options] Options for this track call.
     */
    shotReported(properties, options) {
        this.itly.track(new ShotReported(properties), options);
    }

    /**
     * Tracks when a user saves a Shot to a Collection.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.collection_created_at The date/time the collection was created.
     * @param {string} properties.collection_id ID of the collection.
     * @param {number} properties.collection_shot_count The number of Shots currently in the collection.
     * @param {string} properties.collection_title The title of the collection.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {number} properties.shot_attachment_count Number of attachments.
     * @param {number} properties.shot_comments_count The Shot's current number of comments.
     * @param {string} properties.shot_format The type of format of the Shot.
     * @param {boolean} properties.shot_has_download Whether the Shot has a downloadable asset.
     * @param {boolean} properties.shot_has_good Whether the Shot has a Good for Sale.
     * @param {boolean} properties.shot_has_pro_features Whether the Shot allows for pro features.
     * @param {number} [properties.shot_height] Height of the Shot in pixels.
     * @param {string} properties.shot_id ID of the Shots
     * @param {boolean} properties.shot_is_case_study Whether or not the shot is a case study.
     * @param {boolean} properties.shot_is_multishot Whether the Shot is a multishot.
     * @param {boolean} properties.shot_is_published_by_team Whether the Shot is published by a Team (either directly, or published as).
     * @param {number} properties.shot_likes_count The Shot's current number of likes.
     * @param {string} properties.shot_published_at The date/time when the Shot was published.
     * @param {number} properties.shot_saves_count The Shot's current number of saves.
     * @param {string} properties.shot_title Title of the Shot
     * @param {number} properties.shot_views_count The Shot's current number of views.
     * @param {number} [properties.shot_width] Width of the Shot in pixels.
     * @param {TrackOptions} [options] Options for this track call.
     */
    shotSaved(properties, options) {
        this.itly.track(new ShotSaved(properties), options);
    }

    /**
     * Called when a user executes a Shot search on /search. This is only called when a new `query` is provided. Using any of the filters does *not* trigger a new event.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.query The query string.
     * @param {TrackOptions} [options] Options for this track call.
     */
    shotSearched(properties, options) {
        this.itly.track(new ShotSearched(properties), options);
    }

    /**
     * Called when a user clicks on one of the sharing options on a Shot.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {number} properties.shot_attachment_count Number of attachments.
     * @param {number} properties.shot_comments_count The Shot's current number of comments.
     * @param {string} properties.shot_format The type of format of the Shot.
     * @param {boolean} properties.shot_has_download Whether the Shot has a downloadable asset.
     * @param {boolean} properties.shot_has_good Whether the Shot has a Good for Sale.
     * @param {boolean} properties.shot_has_pro_features Whether the Shot allows for pro features.
     * @param {number} [properties.shot_height] Height of the Shot in pixels.
     * @param {string} properties.shot_id ID of the Shots
     * @param {boolean} properties.shot_is_case_study Whether or not the shot is a case study.
     * @param {boolean} properties.shot_is_multishot Whether the Shot is a multishot.
     * @param {boolean} properties.shot_is_published_by_team Whether the Shot is published by a Team (either directly, or published as).
     * @param {number} properties.shot_likes_count The Shot's current number of likes.
     * @param {string} properties.shot_published_at The date/time when the Shot was published.
     * @param {number} properties.shot_saves_count The Shot's current number of saves.
     * @param {string} properties.shot_title Title of the Shot
     * @param {number} properties.shot_views_count The Shot's current number of views.
     * @param {number} [properties.shot_width] Width of the Shot in pixels.
     * @param {string} properties.social_platform The name of the social platform that the user selected (i.e. twitter, pinterest, clipboard)
     * @param {TrackOptions} [options] Options for this track call.
     */
    shotShared(properties, options) {
        this.itly.track(new ShotShared(properties), options);
    }

    /**
     * Tracks when a user successfully signs in.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.method Method used to sign in. For example; google, twitter, email.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {TrackOptions} [options] Options for this track call.
     */
    signedIn(properties, options) {
        this.itly.track(new SignedIn(properties), options);
    }

    /**
     * Called when a user clicks-through a social media link.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {string} properties.destination_url The social media link.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.location The location of the button.
     * @param {string} properties.owner_id The user ID that the social link belongs to. 
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.social_type The name of the social media website.
     * @param {TrackOptions} [options] Options for this track call.
     */
    socialClicked(properties, options) {
        this.itly.track(new SocialClicked(properties), options);
    }

    /**
     * Called when a user clicks on a call to action on a Toasty.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {string} properties.cta_type The type of CTA; what action does it trigger.
     * @param {string} [properties.destination_url] The CTA link. Required if cta_type is a link.
     * @param {boolean} properties.has_cta Whether the toasty has a CTA button.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.target_user_id] User ID of the target user, when the Toasty is linked to a User's profile (i.e. Hire Me).
     * @param {string} properties.toasty_text Records the Toasty's text as presented to the user.
     * @param {string} properties.toasty_type The type of toasty.
     * @param {TrackOptions} [options] Options for this track call.
     */
    toastyClicked(properties, options) {
        this.itly.track(new ToastyClicked(properties), options);
    }

    /**
     * Called when a user clicks the dismiss button on a Toasty.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {string} properties.cta_type The type of CTA; what action does it trigger.
     * @param {string} [properties.destination_url] The CTA link. Required if cta_type is a link.
     * @param {boolean} properties.has_cta Whether the toasty has a CTA button.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.target_user_id] User ID of the target user, when the Toasty is linked to a User's profile (i.e. Hire Me).
     * @param {string} properties.toasty_text Records the Toasty's text as presented to the user.
     * @param {string} properties.toasty_type The type of toasty.
     * @param {TrackOptions} [options] Options for this track call.
     */
    toastyDismissed(properties, options) {
        this.itly.track(new ToastyDismissed(properties), options);
    }

    /**
     * Called when a Toasty is shown to a user.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} [properties.cta_text] Records the CTA button's text. Required if has_cta is True.
     * @param {string} properties.cta_type The type of CTA; what action does it trigger.
     * @param {string} [properties.destination_url] The CTA link. Required if cta_type is a link.
     * @param {boolean} properties.has_cta Whether the toasty has a CTA button.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.target_user_id] User ID of the target user, when the Toasty is linked to a User's profile (i.e. Hire Me).
     * @param {string} properties.toasty_text Records the Toasty's text as presented to the user.
     * @param {string} properties.toasty_type The type of toasty.
     * @param {TrackOptions} [options] Options for this track call.
     */
    toastyShown(properties, options) {
        this.itly.track(new ToastyShown(properties), options);
    }

    /**
     * Tracks when a user starts the authentication process with Twitter (i.e. Sign in with Twitter).
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.object_type Type of web object that is viewed (Page or Modal)
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.trigger The button that triggered the authentication.
     * @param {string} properties.type Type of authentication (Sign Up or Sign In).
     * @param {TrackOptions} [options] Options for this track call.
     */
    twitterAuthenticationStarted(properties, options) {
        this.itly.track(new TwitterAuthenticationStarted(properties), options);
    }

    /**
     * Tracks when a user clicks on a selected call-to-action with the intent to upgrade their existing product (i.e. not all CTAs are tracked).
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {string} properties.currency Property has no description in tracking plan.
     * @param {string} [properties.current_product_billing_plan] The current product's billing plan (i.e. monthly, quarterly, yearly, non-recurring).
     * @param {string} properties.current_product_name The current product's name.
     * @param {string} [properties.current_sub_product_name] The current sub-product's name.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.location The location on page of the element clicked.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.product_billing_plan] The product's billing plan (i.e. monthly, quarterly, yearly, non-recurring).
     * @param {string} properties.product_name The product's name.
     * @param {number} [properties.product_price] The default price of the product, excluding all discounts.
     * @param {string} [properties.sub_product_name] The sub-product's name.
     * @param {string} properties.text The text of the element clicked. !!These values should be hard-coded, otherwise, browser translation on the client-side affect the text being recorded!!
     * @param {TrackOptions} [options] Options for this track call.
     */
    upgradeCallToActionClicked(properties, options) {
        this.itly.track(new UpgradeCallToActionClicked(properties), options);
    }

    /**
     * Tracks when a user clicks on a selected call-to-action with the intent to upload a shot.
     *
     * Owner: Ashley Melanson
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.location The location on page of the element clicked.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.text The text of the element clicked. !!These values should be hard-coded, otherwise, browser translation on the client-side affect the text being recorded!!
     * @param {TrackOptions} [options] Options for this track call.
     */
    uploadCallToActionClicked(properties, options) {
        this.itly.track(new UploadCallToActionClicked(properties), options);
    }

    /**
     * Called when a user enters an upsell flow either by clicking on a call-to-action, or by doing any other action that triggers an upsell flow.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.currency Property has no description in tracking plan.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.product_billing_plan] The product's billing plan (i.e. monthly, quarterly, yearly, non-recurring).
     * @param {string} properties.product_name The product's name.
     * @param {number} [properties.product_price] The default price of the product, excluding all discounts.
     * @param {string} properties.referrer Button or action that prompted the user to enter the flow.
     * @param {string} properties.step_name Name of the current step in the upsell flow.
     * @param {string} [properties.sub_product_name] The sub-product's name.
     * @param {TrackOptions} [options] Options for this track call.
     */
    upsellFlowEntered(properties, options) {
        this.itly.track(new UpsellFlowEntered(properties), options);
    }

    /**
     * Called when a user completes a step in an upsell flow.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.choice Name of the button or option that the user selected to complete this step.
     * @param {string} properties.currency Property has no description in tracking plan.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} [properties.product_billing_plan] The product's billing plan (i.e. monthly, quarterly, yearly, non-recurring).
     * @param {string} properties.product_name The product's name.
     * @param {number} [properties.product_price] The default price of the product, excluding all discounts.
     * @param {string} properties.step_name Name of the current step in the upsell flow.
     * @param {string} [properties.sub_product_name] The sub-product's name.
     * @param {TrackOptions} [options] Options for this track call.
     */
    upsellFlowStepCompleted(properties, options) {
        this.itly.track(new UpsellFlowStepCompleted(properties), options);
    }

    /**
     * Called when a user blocks another user.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.user_created_at The date/time the User account was created.
     * @param {number} properties.user_followers Number of followers.
     * @param {boolean} properties.user_hiring_is_available Whether the User is currently available for work.
     * @param {string} properties.user_id ID of the User.
     * @param {boolean} properties.user_is_pro Whether the User is a Pro subscriber
     * @param {string} properties.user_type User Type of the User.
     * @param {string} properties.user_username Username of the User.
     * @param {TrackOptions} [options] Options for this track call.
     */
    userBlocked(properties, options) {
        this.itly.track(new UserBlocked(properties), options);
    }

    /**
     * Tracks when a user follows another user.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {string} properties.following_id ID of the following record.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {string} properties.user_created_at The date/time the User account was created.
     * @param {number} properties.user_followers Number of followers.
     * @param {boolean} properties.user_hiring_is_available Whether the User is currently available for work.
     * @param {string} properties.user_id ID of the User.
     * @param {boolean} properties.user_is_pro Whether the User is a Pro subscriber
     * @param {string} properties.user_type User Type of the User.
     * @param {string} properties.user_username Username of the User.
     * @param {TrackOptions} [options] Options for this track call.
     */
    userFollowed(properties, options) {
        this.itly.track(new UserFollowed(properties), options);
    }

    /**
     * Called when a user successfully sends a message to another user, **excluding** replies (since we track this event in the frontend and we should record replies in the backend).
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {number} [properties.budget] Property has no description in tracking plan.
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {string} [properties.job_location] Location string as input by the user.
     * @param {string} [properties.job_timeline] Property has no description in tracking plan.
     * @param {string} [properties.job_work_type] Property has no description in tracking plan.
     * @param {string} properties.message_body The text of the Message.
     * @param {string} properties.message_id The Message ID.
     * @param {string} properties.message_recipient_id The User ID of the recipient.
     * @param {string} properties.message_thread_id The Message Thread ID.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {boolean} [properties.remote_friendly] Remote Friendly selector.
     * @param {string} [properties.salary_range] Property has no description in tracking plan.
     * @param {TrackOptions} [options] Options for this track call.
     */
    userMessaged(properties, options) {
        this.itly.track(new UserMessaged(properties), options);
    }

    /**
     * Called when a user updates their work availability.
     *
     * Owner: charles@dribbble.com
     * @param {Object} properties The event's properties.
     * @param {number} [properties.contract_hours_min] Minimum hours for a contract.
     * @param {number} properties.education_count Number of education objects added.
     * @param {number} [properties.fixed_price_min] Minimum fixed price budget (in USD)
     * @param {boolean} [properties.has_visa] Whether the user has a working US visa.
     * @param {number} [properties.hourly_rate_min] Minimum hourly rate (in USD)
     * @param {boolean} properties.is_authenticated Whether the user is authenticated (i.e. signed in).
     * @param {boolean} properties.is_available Whether the user indicated they are available for work.
     * @param {boolean} properties.is_freelance Whether the user enabled Freelance/Contract in their work preferences.
     * @param {boolean} properties.is_fulltime Whether the user enabled Full Time in their work preferences.
     * @param {boolean} [properties.is_willing_onsite] Whether the user is willing to work on-site.
     * @param {boolean} [properties.is_willing_remote] Whether the use is willing to work remotely.
     * @param {string} [properties.location] Location string as input by the user.
     * @param {string} properties.page_action The action on the controller that generated the page.
     * @param {string} properties.page_controller The Dribbble app's controller that generated the page.
     * @param {string} properties.page_path Canonical path of the page.
     * @param {string} [properties.page_referrer] URL of the previous page (if known).
     * @param {string} [properties.page_search] Query string portion of the page URL.
     * @param {string} properties.page_title Title of the page.
     * @param {string} properties.page_url URL of the page.
     * @param {number} [properties.salary_range_max] The maximum boundary of the salary range selection.
     * @param {number} [properties.salary_range_min] The minimum boundary of the salary range selection.
     * @param {string[]} [properties.skills] Array of skills.
     * @param {string[]} [properties.specialties] Array of specialties selected.
     * @param {number} properties.work_history_count Number of work history objects added.
     * @param {TrackOptions} [options] Options for this track call.
     */
    workAvailabilityUpdated(properties, options) {
        this.itly.track(new WorkAvailabilityUpdated(properties), options);
    }

    /**
     * Track any event.
     * @param {Object} event The event.
     * @param {string} event.name The event's name.
     * @param {string} [event.properties] The event's properties.
     * @param {string} [event.id] The event's ID.
     * @param {string} [event.version] The event's version.
     * @param {TrackOptions} [options] Options for this track call.
     */
    track(event, options) {
        this.itly.track(event, options);
    }

    /**
     * Reset (e.g. on logout) all analytics state for the current user and group.
     */
    reset() {
        this.itly.reset();
    }

    flush() {
        return this.itly.flush();
    }
}

const itlySdk = new Itly();

export default itlySdk;
export {
    AdClicked,
    AdImpressionViewed,
    AdRequestFailed,
    AdRequested,
    AdServed,
    AffiliateLinkClicked,
    ApplicationFlowEntered,
    ApplicationFlowStepCompleted,
    AuthenticationViewed,
    BoostedShotModalViewed,
    CallToActionClicked,
    CheckoutCompleted,
    CheckoutViewed,
    CollectionCreated,
    CustomDomainPurchased,
    DesignerApplicationSubmitted,
    DesignerApplicationViewed,
    DesignerSearchResultBookmarked,
    DesignerSearchResultExpanded,
    DesignerSearchResultUnbookmarked,
    DesignerSearchSaved,
    DesignerSearched,
    EducationInformationFormCompleted,
    FreelanceProjectMessaged,
    FreelanceProjectSearched,
    FreelanceProjectSubmitted,
    FreelanceProjectViewed,
    GoogleAuthenticationStarted,
    HeaderNavigationClicked,
    IntroVideoCallToActionClicked,
    IntroVideoDismissed,
    IntroVideoDisplayed,
    IntroVideoExpanded,
    JobApplied,
    JobSearched,
    JobViewed,
    ModalClicked,
    ModalDismissed,
    ModalShown,
    OnboardingHiringScopeCompleted,
    OnboardingHiringWorkTypeCompleted,
    OnboardingIntentionsCompleted,
    OnboardingProfileCompleted,
    PageViewed,
    PurchaseCallToActionClicked,
    ShotCommented,
    ShotFeedFiltered,
    ShotLiked,
    ShotReported,
    ShotSaved,
    ShotSearched,
    ShotShared,
    SignedIn,
    SocialClicked,
    ToastyClicked,
    ToastyDismissed,
    ToastyShown,
    TwitterAuthenticationStarted,
    UpgradeCallToActionClicked,
    UploadCallToActionClicked,
    UpsellFlowEntered,
    UpsellFlowStepCompleted,
    UserBlocked,
    UserFollowed,
    UserMessaged,
    WorkAvailabilityUpdated
};