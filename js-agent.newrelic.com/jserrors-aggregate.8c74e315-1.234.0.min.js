"use strict";
(window.webpackChunkNRBA = window.webpackChunkNRBA || []).push([
    [317], {
        9071: (e, t, r) => {
            r.d(t, {
                I: () => s
            });
            var s = 0,
                n = navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);
            n && (s = +n[1])
        },
        3241: (e, t, r) => {
            r.d(t, {
                o: () => c
            });
            var s = r(5673),
                n = r(9557),
                i = r(1161),
                a = r(2545),
                o = r(880);
            class c extends n.w {
                constructor(e, t, r) {
                    super(r), this.endpoint = e, this.opts = t || {}, this.started = !1, this.timeoutHandle = null, this.aborted = !1, this.harvest = new i.M(this.sharedContext), (0, a.L)(this.unload.bind(this), (0, o.Mt)(this.sharedContext.agentIdentifier, "allow_bfcache")), this.sharedContext ? .ee.on("session-reset", this.unload.bind(this))
                }
                unload() {
                    this.aborted || (this.opts.onUnload && this.opts.onUnload(), this.runHarvest({
                        unload: !0
                    }))
                }
                startTimer(e, t) {
                    this.interval = e, this.started = !0, this.scheduleHarvest(null != t ? t : this.interval)
                }
                stopTimer() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.aborted = e, this.started = !1, this.timeoutHandle && clearTimeout(this.timeoutHandle)
                }
                scheduleHarvest(e, t) {
                    if (!this.timeoutHandle) {
                        var r = this;
                        null == e && (e = this.interval), this.timeoutHandle = setTimeout((() => {
                            r.timeoutHandle = null, r.runHarvest(t)
                        }), 1e3 * e)
                    }
                }
                runHarvest(e) {
                    if (this.aborted) return;
                    var t = this;
                    let r, n = [];
                    if (this.opts.getPayload) {
                        if (r = (0, i.q)(this.endpoint, e), !r) return !1;
                        const t = r.method === s.T.xhr;
                        var a = this.opts.getPayload({
                            retry: t
                        });
                        if (!a) return void(this.started && this.scheduleHarvest());
                        a = "[object Array]" === Object.prototype.toString.call(a) ? a : [a], n.push(...a)
                    }
                    let o = e => this.harvest.sendX(e);
                    return n.length ? o = this.opts.raw ? e => this.harvest._send(e) : e => this.harvest.send(e) : n.push(void 0), n.forEach((t => {
                        o({
                            endpoint: this.endpoint,
                            payload: t,
                            opts: e,
                            submitMethod: r,
                            cbFinished: c,
                            customUrl: this.opts.customUrl,
                            raw: this.opts.raw
                        })
                    })), void(this.started && this.scheduleHarvest());

                    function c(r) {
                        r.blocked ? t.onHarvestBlocked(e, r) : t.onHarvestFinished(e, r)
                    }
                }
                onHarvestFinished(e, t) {
                    if (this.opts.onFinished && this.opts.onFinished(t), t.sent && t.retry) {
                        var r = t.delay || this.opts.retryDelay;
                        this.started && r ? (clearTimeout(this.timeoutHandle), this.timeoutHandle = null, this.scheduleHarvest(r, e)) : !this.started && r && this.scheduleHarvest(r, e)
                    }
                }
            }
        },
        2545: (e, t, r) => {
            r.d(t, {
                L: () => c
            });
            var s = r(9071),
                n = r(8544),
                i = r(273),
                a = r(2374),
                o = r(6998);
            if (a.v6) {
                a._A.cleanupTasks = [];
                const e = a._A.close;
                a._A.close = () => {
                    for (let e of a._A.cleanupTasks) e();
                    e()
                }
            }

            function c(e, t) {
                if (a.il)
                    if (t)(0, o.N)(e, !0), (0, n.bP)("pagehide", e);
                    else {
                        var r = (0, i.Z)(e);
                        !s.I || navigator.sendBeacon ? (0, n.bP)("pagehide", r) : (0, n.bP)("beforeunload", r), (0, n.bP)("unload", r)
                    }
                else a.v6 && a._A.cleanupTasks.push(e)
            }
        },
        273: (e, t, r) => {
            function s(e) {
                var t = this;
                let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 500,
                    s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                const n = s ? .leading || !1;
                let i;
                return function() {
                    for (var s = arguments.length, a = new Array(s), o = 0; o < s; o++) a[o] = arguments[o];
                    n && void 0 === i && (e.apply(t, a), i = setTimeout((() => i = clearTimeout(i)), r)), n || (clearTimeout(i), i = setTimeout((() => {
                        e.apply(t, a)
                    }), r))
                }
            }

            function n(e) {
                var t = this;
                let r = !1;
                return function() {
                    if (!r) {
                        r = !0;
                        for (var s = arguments.length, n = new Array(s), i = 0; i < s; i++) n[i] = arguments[i];
                        e.apply(t, n)
                    }
                }
            }
            r.d(t, {
                D: () => s,
                Z: () => n
            })
        },
        3616: (e, t, r) => {
            r.r(t), r.d(t, {
                Aggregate: () => T
            });
            const s = /([a-z0-9]+)$/i;

            function n(e) {
                if (!e) return;
                const t = e.match(s);
                return t ? t[1] : void 0
            }
            var i = /^\n+|\n+$/g;

            function a(e) {
                return function(e) {
                    var t;
                    if (e.length > 100) {
                        var r = e.length - 100;
                        t = e.slice(0, 50).join("\n"), t += "\n< ...truncated " + r + " lines... >\n", t += e.slice(-50).join("\n")
                    } else t = e.join("\n");
                    return t
                }(e).replace(i, "")
            }
            var o = r(2374),
                c = r(4917);

            function h(e) {
                if ("string" != typeof e) return "";
                const t = (0, c.f)(e);
                return t === (0, c.f)(o.FN) ? "<inline>" : t
            }
            var u = !1,
                d = /function (.+?)\s*\(/,
                l = /^\s*at (?:((?:\[object object\])?(?:[^(]*\([^)]*\))*[^()]*(?: \[as \S+\])?) )?\(?((?:file|http|https|chrome-extension):.*?)?:(\d+)(?::(\d+))?\)?\s*$/i,
                f = /^\s*(?:(\S*|global code)(?:\(.*?\))?@)?((?:file|http|https|chrome|safari-extension).*?):(\d+)(?::(\d+))?\s*$/i,
                g = /^\s*at .+ \(eval at \S+ \((?:(?:file|http|https):[^)]+)?\)(?:, [^:]*:\d+:\d+)?\)$/i,
                m = /^\s*at Function code \(Function code:\d+:\d+\)\s*/i;

            function v(e) {
                var t = null;
                try {
                    if (t = function(e) {
                            if (!e.stack) return null;
                            var t = e.stack.split("\n").reduce(p, {
                                frames: [],
                                stackLines: [],
                                wrapperSeen: !1
                            });
                            return t.frames.length ? {
                                mode: "stack",
                                name: e.name || k(e),
                                message: e.message,
                                stackString: a(t.stackLines),
                                frames: t.frames
                            } : null
                        }(e), t) return t
                } catch (e) {
                    u
                }
                try {
                    if (t = function(e) {
                            if (!("line" in e)) return null;
                            var t = e.name || k(e);
                            if (!e.sourceURL) return {
                                mode: "sourceline",
                                name: t,
                                message: e.message,
                                stackString: k(e) + ": " + e.message + "\n    in evaluated code",
                                frames: [{
                                    func: "evaluated code"
                                }]
                            };
                            var r = h(e.sourceURL),
                                s = t + ": " + e.message + "\n    at " + r;
                            e.line && (s += ":" + e.line, e.column && (s += ":" + e.column));
                            return {
                                mode: "sourceline",
                                name: t,
                                message: e.message,
                                stackString: s,
                                frames: [{
                                    url: r,
                                    line: e.line,
                                    column: e.column
                                }]
                            }
                        }(e), t) return t
                } catch (e) {
                    u
                }
                try {
                    if (t = function(e) {
                            var t = e.name || k(e);
                            return t ? {
                                mode: "nameonly",
                                name: t,
                                message: e.message,
                                stackString: t + ": " + e.message,
                                frames: []
                            } : null
                        }(e), t) return t
                } catch (e) {
                    u
                }
                return {
                    mode: "failed",
                    stackString: "",
                    frames: []
                }
            }

            function p(e, t) {
                let r = function(e) {
                    var t = e.match(f);
                    t || (t = e.match(l));
                    if (t) return {
                        url: t[2],
                        func: "Anonymous function" !== t[1] && "global code" !== t[1] && t[1] || null,
                        line: +t[3],
                        column: t[4] ? +t[4] : null
                    };
                    if (e.match(g) || e.match(m) || "anonymous" === e) return {
                        func: "evaluated code"
                    }
                }(t);
                if (!r) return e.stackLines.push(t), e;
                var s;
                if ((s = r.func) && s.indexOf("nrWrapper") >= 0 && (e.wrapperSeen = !0), !e.wrapperSeen) {
                    let s = h(r.url);
                    s !== r.url && (t = t.replace(r.url, s), r.url = s), e.stackLines.push(t), e.frames.push(r)
                }
                return e
            }

            function k(e) {
                var t = d.exec(String(e.constructor));
                return t && t.length > 1 ? t[1] : "unknown"
            }

            function b(e) {
                var t = 0;
                if (!e || !e.length) return t;
                for (var r = 0; r < e.length; r++) t = (t << 5) - t + e.charCodeAt(r), t |= 0;
                return t
            }
            var y = r(4045),
                _ = r(3241),
                I = r(2438),
                H = r(9252),
                S = r(7022),
                w = r(880),
                C = r(2053),
                A = r(8322),
                P = r(4329),
                D = r(2325),
                N = r(5330);
            class T extends N.m {
                static featureName = A.t;
                constructor(e, t) {
                    var r;
                    super(e, t, A.t), r = this, this.stackReported = {}, this.pageviewReported = {}, this.errorCache = {}, this.currentBody, this.errorOnPage = !1, this.ee.on("interactionSaved", (e => this.onInteractionSaved(e))), this.ee.on("interactionDiscarded", (e => this.onInteractionDiscarded(e))), (0, y.X)("err", (function() {
                        return r.storeError(...arguments)
                    }), this.featureName, this.ee), (0, y.X)("ierr", (function() {
                        return r.storeError(...arguments)
                    }), this.featureName, this.ee);
                    const s = (0, w.Mt)(this.agentIdentifier, "jserrors.harvestTimeSeconds") || 10,
                        n = new _.o("jserrors", {
                            onFinished: function() {
                                return r.onHarvestFinished(...arguments)
                            }
                        }, this);
                    n.harvest.on("jserrors", (function() {
                        return r.onHarvestStarted(...arguments)
                    })), this.ee.on("drain-".concat(this.featureName), (() => {
                        this.blocked || n.startTimer(s)
                    })), (0, y.X)("block-err", (() => {
                        this.blocked = !0, n.stopTimer(!0)
                    }), this.featureName, this.ee), (0, P.L)(this.agentIdentifier, this.featureName)
                }
                onHarvestStarted(e) {
                    var t = this.aggregator.take(["err", "ierr", "xhr"]);
                    e.retry && (this.currentBody = t);
                    var r = {
                            body: t,
                            qs: {}
                        },
                        s = (0, I.P)((0, w.OP)(this.agentIdentifier).releaseIds);
                    return "{}" !== s && (r.qs.ri = s), t && t.err && t.err.length && !this.errorOnPage && (r.qs.pve = "1", this.errorOnPage = !0), r
                }
                onHarvestFinished(e) {
                    e.retry && this.currentBody && ((0, S.D)(this.currentBody, ((e, t) => {
                        for (var r = 0; r < t.length; r++) {
                            var s = t[r],
                                n = this.getBucketName(s.params, s.custom);
                            this.aggregator.merge(e, n, s.metrics, s.params, s.custom)
                        }
                    })), this.currentBody = null)
                }
                nameHash(e) {
                    return b("".concat(e.exceptionClass, "_").concat(e.message, "_").concat(e.stack_trace || e.browser_stack_hash))
                }
                getBucketName(e, t) {
                    return this.nameHash(e) + ":" + b((0, I.P)(t))
                }
                buildCanonicalStackString(e) {
                    for (var t = "", r = 0; r < e.frames.length; r++) {
                        var s = e.frames[r],
                            i = n(s.func);
                        t && (t += "\n"), i && (t += i + "@"), "string" == typeof s.url && (t += s.url), s.line && (t += ":" + s.line)
                    }
                    return t
                }
                storeError(e, t, r, s) {
                    t = t || (0, C.z)();
                    const n = (0, w.OP)(this.agentIdentifier);
                    let i;
                    if (!r && n.onerror && (i = n.onerror(e), i && ("string" != typeof i.group || !i.group.length))) return;
                    var a = v(e);
                    const c = {
                        stackHash: b(this.buildCanonicalStackString(a)),
                        exceptionClass: a.name,
                        request_uri: o._A ? .location.pathname
                    };
                    a.message && (c.message = "" + a.message), i ? .group && (c.errorGroup = i.group);
                    var h, u = b("".concat(a.name, "_").concat(a.message, "_").concat(a.stackString));
                    this.stackReported[u] ? c.browser_stack_hash = b(a.stackString) : (this.stackReported[u] = !0, c.stack_trace = (h = a.stackString).length > 65530 ? h.substr(0, 65530) : h), c.releaseIds = (0, I.P)(n.releaseIds), this.pageviewReported[u] || (c.pageview = 1, this.pageviewReported[u] = !0);
                    var d = r ? "ierr" : "err",
                        l = {
                            time: t
                        };
                    const f = [d, u, c, l];
                    if ((0, H.p)("errorAgg", f, void 0, D.D.sessionTrace, this.ee), (0, H.p)("errorAgg", f, void 0, D.D.spa, this.ee), (0, H.p)("errorAgg", f, void 0, D.D.sessionReplay, this.ee), !this.blocked) {
                        var g = (0, w.C5)(this.agentIdentifier).jsAttributes;
                        if (null != c._interactionId) this.errorCache[c._interactionId] = this.errorCache[c._interactionId] || [], this.errorCache[c._interactionId].push([d, u, c, l, g, s]);
                        else {
                            var m = {};
                            (0, S.D)(g, k), s && (0, S.D)(s, k);
                            var p = u + ":" + b((0, I.P)(m));
                            this.aggregator.store(d, p, c, l, m)
                        }
                    }

                    function k(e, t) {
                        m[e] = t && "object" == typeof t ? (0, I.P)(t) : t
                    }
                }
                onInteractionSaved(e) {
                    this.errorCache[e.id] && !this.blocked && (this.errorCache[e.id].forEach((t => {
                        var r = {},
                            s = t[4],
                            n = t[5];
                        (0, S.D)(s, o), (0, S.D)(e.root.attrs.custom, o), (0, S.D)(n, o);
                        var i = t[2];
                        i.browserInteractionId = e.root.attrs.id, delete i._interactionId, i._interactionNodeId && (i.parentNodeId = i._interactionNodeId.toString(), delete i._interactionNodeId);
                        var a = t[1] + e.root.attrs.id + ":" + b((0, I.P)(r));

                        function o(e, t) {
                            r[e] = t && "object" == typeof t ? (0, I.P)(t) : t
                        }
                        this.aggregator.store(t[0], a, i, t[3], r)
                    })), delete this.errorCache[e.id])
                }
                onInteractionDiscarded(e) {
                    this.errorCache && this.errorCache[e.id] && !this.blocked && (this.errorCache[e.id].forEach((t => {
                        var r = {},
                            s = t[4],
                            n = t[5];
                        (0, S.D)(s, o), (0, S.D)(e.root.attrs.custom, o), (0, S.D)(n, o);
                        var i = t[2];
                        delete i._interactionId, delete i._interactionNodeId;
                        var a = t[1] + ":" + b((0, I.P)(r));

                        function o(e, t) {
                            r[e] = t && "object" == typeof t ? (0, I.P)(t) : t
                        }
                        this.aggregator.store(t[0], a, t[2], t[3], r)
                    })), delete this.errorCache[e.id])
                }
            }
        },
        8322: (e, t, r) => {
            r.d(t, {
                A: () => n,
                t: () => s
            });
            const s = r(2325).D.jserrors,
                n = "nr@seenError"
        }
    }
]);